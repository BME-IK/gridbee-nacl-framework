# Makefile.in generated by automake 1.9.6 from Makefile.am.
# sched/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Note: MYSQL_CFLAGS and MYSQL_LIBS set by configure from mysql_config




srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/boinc
pkglibdir = $(libdir)/boinc
pkgincludedir = $(includedir)/boinc
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-nacl
target_triplet = i686-pc-nacl
DIST_COMMON = $(am__noinst_HEADERS_DIST) \
	$(am__pkginclude_HEADERS_DIST) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(top_srcdir)/Makefile.incl \
	$(top_srcdir)/py/boinc_path_config.py.in
# end of "if INSTALL_HEADERS
#am__append_1 = libsched_fcgi.la
#am__append_2 = $(LIBSCHED_FCGI_STATIC)
#bin_PROGRAMS = delete_file$(EXEEXT) \
#	get_file$(EXEEXT) make_work$(EXEEXT) \
#	sched_driver$(EXEEXT) put_file$(EXEEXT) \
#	show_shmem$(EXEEXT) wu_check$(EXEEXT)
#sched_PROGRAMS = census$(EXEEXT) \
#	credit_test$(EXEEXT) db_dump$(EXEEXT) \
#	db_purge$(EXEEXT) feeder$(EXEEXT) \
#	file_deleter$(EXEEXT) \
#	message_handler$(EXEEXT) \
#	sample_assimilator$(EXEEXT) \
#	sample_dummy_assimilator$(EXEEXT) \
#	sample_bitwise_validator$(EXEEXT) \
#	sample_trivial_validator$(EXEEXT) \
#	sample_work_generator$(EXEEXT) \
#	single_job_assimilator$(EXEEXT) \
#	transitioner$(EXEEXT) \
#	trickle_credit$(EXEEXT) \
#	trickle_echo$(EXEEXT) \
#	update_stats$(EXEEXT)
#cgi_PROGRAMS = cgi$(EXEEXT) \
#	file_upload_handler$(EXEEXT) \
#	$(am__EXEEXT_1)
##am__append_3 = fcgi \
##                fcgi_file_upload_handler

subdir = sched
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/acx_pthread.m4 \
	$(top_srcdir)/m4/ax_check_gl.m4 \
	$(top_srcdir)/m4/ax_check_glu.m4 \
	$(top_srcdir)/m4/ax_check_glut.m4 \
	$(top_srcdir)/m4/ax_lang_compiler_ms.m4 \
	$(top_srcdir)/m4/ax_winsock.m4 \
	$(top_srcdir)/m4/boinc_check_cygwin.m4 \
	$(top_srcdir)/m4/boinc_check_fcgi.m4 \
	$(top_srcdir)/m4/boinc_check_flags.m4 \
	$(top_srcdir)/m4/boinc_check_lib_with.m4 \
	$(top_srcdir)/m4/boinc_getsockopt.m4 \
	$(top_srcdir)/m4/boinc_platform.m4 \
	$(top_srcdir)/m4/boinc_set_compile_flags.m4 \
	$(top_srcdir)/m4/boinc_wxwidgets.m4 \
	$(top_srcdir)/m4/check_ssl.m4 $(top_srcdir)/m4/kc_mysql.m4 \
	$(top_srcdir)/m4/libcurl.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/sah_check_lib.m4 \
	$(top_srcdir)/m4/sah_header_stdcxx.m4 \
	$(top_srcdir)/m4/sah_largefile_breaks_cxx.m4 \
	$(top_srcdir)/m4/sah_libext.m4 $(top_srcdir)/m4/sah_links.m4 \
	$(top_srcdir)/m4/sah_namespace.m4 \
	$(top_srcdir)/m4/sah_select_bitness.m4 \
	$(top_srcdir)/m4/sah_staticize_ldflags.m4 \
	$(top_srcdir)/m4/sqlite3.m4 $(top_srcdir)/m4/wxWidgets.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = boinc_path_config.py
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(cgidir)" "$(DESTDIR)$(scheddir)" \
	"$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkgincludedir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libsched_la_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1)
am__libsched_la_SOURCES_DIST = credit.cpp sched_shmem.cpp \
	sched_util.cpp sched_config.cpp sched_limit.cpp sched_msgs.cpp \
	../db/boinc_db.cpp ../db/db_base.cpp \
	../tools/process_result_template.cpp ../tools/backend_lib.cpp
am__objects_1 = libsched_la-credit.lo \
	libsched_la-sched_shmem.lo \
	libsched_la-sched_util.lo \
	libsched_la-sched_config.lo \
	libsched_la-sched_limit.lo \
	libsched_la-sched_msgs.lo \
	libsched_la-boinc_db.lo \
	libsched_la-db_base.lo \
	libsched_la-process_result_template.lo \
	libsched_la-backend_lib.lo
am_libsched_la_OBJECTS = $(am__objects_1)
libsched_la_OBJECTS = $(am_libsched_la_OBJECTS)
am_libsched_la_rpath = -rpath $(libdir)
libsched_fcgi_la_DEPENDENCIES =
am__libsched_fcgi_la_SOURCES_DIST = credit.cpp sched_shmem.cpp \
	sched_util.cpp sched_config.cpp sched_limit.cpp sched_msgs.cpp \
	../db/boinc_db.cpp ../db/db_base.cpp \
	../tools/process_result_template.cpp ../tools/backend_lib.cpp
am__objects_2 = libsched_fcgi_la-credit.lo \
	libsched_fcgi_la-sched_shmem.lo \
	libsched_fcgi_la-sched_util.lo \
	libsched_fcgi_la-sched_config.lo \
	libsched_fcgi_la-sched_limit.lo \
	libsched_fcgi_la-sched_msgs.lo \
	libsched_fcgi_la-boinc_db.lo \
	libsched_fcgi_la-db_base.lo \
	libsched_fcgi_la-process_result_template.lo \
	libsched_fcgi_la-backend_lib.lo
#am_libsched_fcgi_la_OBJECTS =  \
#	$(am__objects_2)
libsched_fcgi_la_OBJECTS = $(am_libsched_fcgi_la_OBJECTS)
#am_libsched_fcgi_la_rpath =  \
#	-rpath $(libdir)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
##am__EXEEXT_1 = fcgi$(EXEEXT) \
##	fcgi_file_upload_handler$(EXEEXT)
cgiPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
schedPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS) $(cgi_PROGRAMS) $(sched_PROGRAMS)
am__census_SOURCES_DIST = census.cpp hr.cpp hr_info.cpp
#am_census_OBJECTS = census.$(OBJEXT) hr.$(OBJEXT) \
#	hr_info.$(OBJEXT)
census_OBJECTS = $(am_census_OBJECTS)
am__DEPENDENCIES_2 = $(top_builddir)/sched/libsched.la
am__DEPENDENCIES_3 = $(top_builddir)/lib/libboinc_crypt.la
am__DEPENDENCIES_4 = $(top_builddir)/lib/libboinc.la
am__DEPENDENCIES_5 = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_4) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
#census_DEPENDENCIES = $(am__DEPENDENCIES_5)
am__cgi_SOURCES_DIST = credit.cpp edf_sim.cpp handle_request.cpp \
	hr.cpp hr_info.cpp sched_main.cpp sched_array.cpp \
	sched_assign.cpp sched_customize.cpp sched_hr.cpp \
	sched_resend.cpp sched_limit.cpp sched_locality.cpp \
	sched_result.cpp sched_score.cpp sched_send.cpp \
	sched_timezone.cpp sched_version.cpp sched_types.cpp \
	time_stats_log.cpp
#am__objects_3 = credit.$(OBJEXT) edf_sim.$(OBJEXT) \
#	handle_request.$(OBJEXT) hr.$(OBJEXT) \
#	hr_info.$(OBJEXT) sched_main.$(OBJEXT) \
#	sched_array.$(OBJEXT) \
#	sched_assign.$(OBJEXT) \
#	sched_customize.$(OBJEXT) \
#	sched_hr.$(OBJEXT) sched_resend.$(OBJEXT) \
#	sched_limit.$(OBJEXT) \
#	sched_locality.$(OBJEXT) \
#	sched_result.$(OBJEXT) \
#	sched_score.$(OBJEXT) sched_send.$(OBJEXT) \
#	sched_timezone.$(OBJEXT) \
#	sched_version.$(OBJEXT) \
#	sched_types.$(OBJEXT) \
#	time_stats_log.$(OBJEXT)
#am_cgi_OBJECTS = $(am__objects_3)
cgi_OBJECTS = $(am_cgi_OBJECTS)
#cgi_DEPENDENCIES = $(am__DEPENDENCIES_5)
am__credit_test_SOURCES_DIST = credit_test.cpp
#am_credit_test_OBJECTS = credit_test.$(OBJEXT)
credit_test_OBJECTS = $(am_credit_test_OBJECTS)
#credit_test_DEPENDENCIES = $(am__DEPENDENCIES_5)
am__db_dump_SOURCES_DIST = db_dump.cpp
#am_db_dump_OBJECTS = db_dump.$(OBJEXT)
db_dump_OBJECTS = $(am_db_dump_OBJECTS)
#db_dump_DEPENDENCIES = $(am__DEPENDENCIES_5)
am__db_purge_SOURCES_DIST = db_purge.cpp
#am_db_purge_OBJECTS = db_purge.$(OBJEXT)
db_purge_OBJECTS = $(am_db_purge_OBJECTS)
#db_purge_DEPENDENCIES = $(am__DEPENDENCIES_5)
am__delete_file_SOURCES_DIST = delete_file.cpp
#am_delete_file_OBJECTS = delete_file.$(OBJEXT)
delete_file_OBJECTS = $(am_delete_file_OBJECTS)
#delete_file_DEPENDENCIES = $(am__DEPENDENCIES_5)
am__fcgi_SOURCES_DIST = credit.cpp edf_sim.cpp handle_request.cpp \
	hr.cpp hr_info.cpp sched_main.cpp sched_array.cpp \
	sched_assign.cpp sched_customize.cpp sched_hr.cpp \
	sched_resend.cpp sched_limit.cpp sched_locality.cpp \
	sched_result.cpp sched_score.cpp sched_send.cpp \
	sched_timezone.cpp sched_version.cpp sched_types.cpp \
	time_stats_log.cpp
#am__objects_4 = fcgi-credit.$(OBJEXT) \
#	fcgi-edf_sim.$(OBJEXT) \
#	fcgi-handle_request.$(OBJEXT) \
#	fcgi-hr.$(OBJEXT) fcgi-hr_info.$(OBJEXT) \
#	fcgi-sched_main.$(OBJEXT) \
#	fcgi-sched_array.$(OBJEXT) \
#	fcgi-sched_assign.$(OBJEXT) \
#	fcgi-sched_customize.$(OBJEXT) \
#	fcgi-sched_hr.$(OBJEXT) \
#	fcgi-sched_resend.$(OBJEXT) \
#	fcgi-sched_limit.$(OBJEXT) \
#	fcgi-sched_locality.$(OBJEXT) \
#	fcgi-sched_result.$(OBJEXT) \
#	fcgi-sched_score.$(OBJEXT) \
#	fcgi-sched_send.$(OBJEXT) \
#	fcgi-sched_timezone.$(OBJEXT) \
#	fcgi-sched_version.$(OBJEXT) \
#	fcgi-sched_types.$(OBJEXT) \
#	fcgi-time_stats_log.$(OBJEXT)
##am_fcgi_OBJECTS =  \
##	$(am__objects_4)
fcgi_OBJECTS = $(am_fcgi_OBJECTS)
am__DEPENDENCIES_6 = $(top_builddir)/sched/libsched_fcgi.la
am__DEPENDENCIES_7 = $(top_builddir)/lib/libboinc_fcgi.la
am__DEPENDENCIES_8 = $(am__DEPENDENCIES_6) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_7) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
##fcgi_DEPENDENCIES =  \
##	$(am__DEPENDENCIES_8)
am__fcgi_file_upload_handler_SOURCES_DIST = file_upload_handler.cpp \
	sched_config.cpp sched_msgs.cpp
##am_fcgi_file_upload_handler_OBJECTS = fcgi_file_upload_handler-file_upload_handler.$(OBJEXT) \
##	fcgi_file_upload_handler-sched_config.$(OBJEXT) \
##	fcgi_file_upload_handler-sched_msgs.$(OBJEXT)
fcgi_file_upload_handler_OBJECTS =  \
	$(am_fcgi_file_upload_handler_OBJECTS)
##fcgi_file_upload_handler_DEPENDENCIES =  \
##	$(am__DEPENDENCIES_8)
am__feeder_SOURCES_DIST = feeder.cpp hr.cpp hr_info.cpp \
	../lib/synch.cpp
#am_feeder_OBJECTS = feeder.$(OBJEXT) hr.$(OBJEXT) \
#	hr_info.$(OBJEXT) synch.$(OBJEXT)
feeder_OBJECTS = $(am_feeder_OBJECTS)
#feeder_DEPENDENCIES = $(am__DEPENDENCIES_5)
am__file_deleter_SOURCES_DIST = file_deleter.cpp
#am_file_deleter_OBJECTS = file_deleter.$(OBJEXT)
file_deleter_OBJECTS = $(am_file_deleter_OBJECTS)
#file_deleter_DEPENDENCIES = $(am__DEPENDENCIES_5)
am__file_upload_handler_SOURCES_DIST = file_upload_handler.cpp
#am_file_upload_handler_OBJECTS =  \
#	file_upload_handler.$(OBJEXT)
file_upload_handler_OBJECTS = $(am_file_upload_handler_OBJECTS)
#file_upload_handler_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_5)
am__get_file_SOURCES_DIST = get_file.cpp
#am_get_file_OBJECTS = get_file.$(OBJEXT)
get_file_OBJECTS = $(am_get_file_OBJECTS)
#get_file_DEPENDENCIES = $(am__DEPENDENCIES_5)
am__make_work_SOURCES_DIST = make_work.cpp
#am_make_work_OBJECTS = make_work.$(OBJEXT)
make_work_OBJECTS = $(am_make_work_OBJECTS)
#make_work_DEPENDENCIES = $(am__DEPENDENCIES_5)
am__message_handler_SOURCES_DIST = message_handler.cpp
#am_message_handler_OBJECTS =  \
#	message_handler.$(OBJEXT)
message_handler_OBJECTS = $(am_message_handler_OBJECTS)
#message_handler_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_5)
am__put_file_SOURCES_DIST = put_file.cpp
#am_put_file_OBJECTS = put_file.$(OBJEXT)
put_file_OBJECTS = $(am_put_file_OBJECTS)
#put_file_DEPENDENCIES = $(am__DEPENDENCIES_5)
am__sample_assimilator_SOURCES_DIST = assimilator.cpp \
	validate_util.cpp sample_assimilator.cpp
#am__objects_5 = assimilator.$(OBJEXT) \
#	validate_util.$(OBJEXT)
#am_sample_assimilator_OBJECTS = $(am__objects_5) \
#	sample_assimilator.$(OBJEXT)
sample_assimilator_OBJECTS = $(am_sample_assimilator_OBJECTS)
#sample_assimilator_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_5)
am__sample_bitwise_validator_SOURCES_DIST = credit.cpp validator.cpp \
	validate_util.cpp validate_util2.cpp \
	sample_bitwise_validator.cpp
#am__objects_6 = credit.$(OBJEXT) \
#	validator.$(OBJEXT) \
#	validate_util.$(OBJEXT) \
#	validate_util2.$(OBJEXT)
#am_sample_bitwise_validator_OBJECTS =  \
#	$(am__objects_6) \
#	sample_bitwise_validator.$(OBJEXT)
sample_bitwise_validator_OBJECTS =  \
	$(am_sample_bitwise_validator_OBJECTS)
#sample_bitwise_validator_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_5)
am__sample_dummy_assimilator_SOURCES_DIST = assimilator.cpp \
	validate_util.cpp sample_dummy_assimilator.cpp
#am_sample_dummy_assimilator_OBJECTS =  \
#	$(am__objects_5) \
#	sample_dummy_assimilator.$(OBJEXT)
sample_dummy_assimilator_OBJECTS =  \
	$(am_sample_dummy_assimilator_OBJECTS)
#sample_dummy_assimilator_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_5)
am__sample_trivial_validator_SOURCES_DIST = credit.cpp validator.cpp \
	validate_util.cpp validate_util2.cpp \
	sample_trivial_validator.cpp
#am_sample_trivial_validator_OBJECTS =  \
#	$(am__objects_6) \
#	sample_trivial_validator.$(OBJEXT)
sample_trivial_validator_OBJECTS =  \
	$(am_sample_trivial_validator_OBJECTS)
#sample_trivial_validator_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_5)
am__sample_work_generator_SOURCES_DIST = sample_work_generator.cpp
#am_sample_work_generator_OBJECTS =  \
#	sample_work_generator.$(OBJEXT)
sample_work_generator_OBJECTS = $(am_sample_work_generator_OBJECTS)
#sample_work_generator_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_5)
am__sched_driver_SOURCES_DIST = sched_driver.cpp
#am_sched_driver_OBJECTS = sched_driver.$(OBJEXT)
sched_driver_OBJECTS = $(am_sched_driver_OBJECTS)
#sched_driver_DEPENDENCIES = $(am__DEPENDENCIES_5)
am__show_shmem_SOURCES_DIST = show_shmem.cpp
#am_show_shmem_OBJECTS = show_shmem.$(OBJEXT)
show_shmem_OBJECTS = $(am_show_shmem_OBJECTS)
#show_shmem_DEPENDENCIES = $(am__DEPENDENCIES_5)
am__single_job_assimilator_SOURCES_DIST = assimilator.cpp \
	validate_util.cpp single_job_assimilator.cpp
#am_single_job_assimilator_OBJECTS =  \
#	$(am__objects_5) \
#	single_job_assimilator.$(OBJEXT)
single_job_assimilator_OBJECTS = $(am_single_job_assimilator_OBJECTS)
#single_job_assimilator_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_5)
am__transitioner_SOURCES_DIST = transitioner.cpp
#am_transitioner_OBJECTS = transitioner.$(OBJEXT)
transitioner_OBJECTS = $(am_transitioner_OBJECTS)
#transitioner_DEPENDENCIES = $(am__DEPENDENCIES_5)
am__trickle_credit_SOURCES_DIST = trickle_credit.cpp \
	trickle_handler.cpp
#am_trickle_credit_OBJECTS =  \
#	trickle_credit.$(OBJEXT) \
#	trickle_handler.$(OBJEXT)
trickle_credit_OBJECTS = $(am_trickle_credit_OBJECTS)
#trickle_credit_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_5)
am__trickle_echo_SOURCES_DIST = trickle_echo.cpp trickle_handler.cpp
#am_trickle_echo_OBJECTS = trickle_echo.$(OBJEXT) \
#	trickle_handler.$(OBJEXT)
trickle_echo_OBJECTS = $(am_trickle_echo_OBJECTS)
#trickle_echo_DEPENDENCIES = $(am__DEPENDENCIES_5)
am__update_stats_SOURCES_DIST = update_stats.cpp
#am_update_stats_OBJECTS = update_stats.$(OBJEXT)
update_stats_OBJECTS = $(am_update_stats_OBJECTS)
#update_stats_DEPENDENCIES = $(am__DEPENDENCIES_5)
am__wu_check_SOURCES_DIST = wu_check.cpp
#am_wu_check_OBJECTS = wu_check.$(OBJEXT)
wu_check_OBJECTS = $(am_wu_check_OBJECTS)
#wu_check_DEPENDENCIES = $(am__DEPENDENCIES_5)
binSCRIPT_INSTALL = $(INSTALL_SCRIPT)
SCRIPTS = $(bin_SCRIPTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libsched_la_SOURCES) $(libsched_fcgi_la_SOURCES) \
	$(census_SOURCES) $(cgi_SOURCES) $(credit_test_SOURCES) \
	$(db_dump_SOURCES) $(db_purge_SOURCES) $(delete_file_SOURCES) \
	$(fcgi_SOURCES) $(fcgi_file_upload_handler_SOURCES) \
	$(feeder_SOURCES) $(file_deleter_SOURCES) \
	$(file_upload_handler_SOURCES) $(get_file_SOURCES) \
	$(make_work_SOURCES) $(message_handler_SOURCES) \
	$(put_file_SOURCES) $(sample_assimilator_SOURCES) \
	$(sample_bitwise_validator_SOURCES) \
	$(sample_dummy_assimilator_SOURCES) \
	$(sample_trivial_validator_SOURCES) \
	$(sample_work_generator_SOURCES) $(sched_driver_SOURCES) \
	$(show_shmem_SOURCES) $(single_job_assimilator_SOURCES) \
	$(transitioner_SOURCES) $(trickle_credit_SOURCES) \
	$(trickle_echo_SOURCES) $(update_stats_SOURCES) \
	$(wu_check_SOURCES)
DIST_SOURCES = $(am__libsched_la_SOURCES_DIST) \
	$(am__libsched_fcgi_la_SOURCES_DIST) \
	$(am__census_SOURCES_DIST) $(am__cgi_SOURCES_DIST) \
	$(am__credit_test_SOURCES_DIST) $(am__db_dump_SOURCES_DIST) \
	$(am__db_purge_SOURCES_DIST) $(am__delete_file_SOURCES_DIST) \
	$(am__fcgi_SOURCES_DIST) \
	$(am__fcgi_file_upload_handler_SOURCES_DIST) \
	$(am__feeder_SOURCES_DIST) $(am__file_deleter_SOURCES_DIST) \
	$(am__file_upload_handler_SOURCES_DIST) \
	$(am__get_file_SOURCES_DIST) $(am__make_work_SOURCES_DIST) \
	$(am__message_handler_SOURCES_DIST) \
	$(am__put_file_SOURCES_DIST) \
	$(am__sample_assimilator_SOURCES_DIST) \
	$(am__sample_bitwise_validator_SOURCES_DIST) \
	$(am__sample_dummy_assimilator_SOURCES_DIST) \
	$(am__sample_trivial_validator_SOURCES_DIST) \
	$(am__sample_work_generator_SOURCES_DIST) \
	$(am__sched_driver_SOURCES_DIST) \
	$(am__show_shmem_SOURCES_DIST) \
	$(am__single_job_assimilator_SOURCES_DIST) \
	$(am__transitioner_SOURCES_DIST) \
	$(am__trickle_credit_SOURCES_DIST) \
	$(am__trickle_echo_SOURCES_DIST) \
	$(am__update_stats_SOURCES_DIST) $(am__wu_check_SOURCES_DIST)
am__noinst_HEADERS_DIST = assimilate_handler.h handle_request.h \
	sched_main.h sched_locality.h sched_score.h sched_send.h \
	sched_shmem.h sched_version.h sched_types.h
am__pkginclude_HEADERS_DIST = credit.h sched_config.h sched_limit.h \
	sched_msgs.h sched_util.h ../tools/backend_lib.h \
	validate_util.h
pkgincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(noinst_HEADERS) $(pkginclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/kalmi/boinc/missing --run aclocal-1.9
ALLOCA = 
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/kalmi/boinc/missing --run tar
AR = i686-nacl-ar
AS = as
AUTOCONF = ${SHELL} /home/kalmi/boinc/missing --run autoconf
AUTOHEADER = ${SHELL} /home/kalmi/boinc/missing --run autoheader
AUTOMAKE = ${SHELL} /home/kalmi/boinc/missing --run automake-1.9
AWK = mawk
BOINC_EXTRA_LIBS =  -lssl -lcrypto   -ldl -lnsl
BOINC_MAJOR_VERSION = 6
BOINC_MINOR_VERSION = 13
BOINC_RELEASE = 1
BOINC_VERSION_STRING = 6.13.1
BUILD_GRAPHICS_API_FALSE = 
BUILD_GRAPHICS_API_TRUE = #
BUILD_STATIC_LIBS_FALSE = #
BUILD_STATIC_LIBS_TRUE = 
BUILD_X11_SCREENSAVER_FALSE = 
BUILD_X11_SCREENSAVER_TRUE = #
CC = i686-nacl-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wall
CLIENTGUIFLAGS = 
CLIENTGUILIBS =   
CLIENTLIBS = -lresolv -lpthread -lm 
CLIENT_BIN_FILENAME = boinc
CLIENT_CMD_BIN_FILENAME = boinccmd
CLIENT_GUI_BIN_FILENAME = boincmgr
CPP = i686-nacl-gcc -E
CPPFLAGS = 
CXX = i686-nacl-g++
CXXCPP = i686-nacl-g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -Wall
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLEXT = so
DLLTOOL = dlltool
DOCBOOK2X_MAN = 
DSYMUTIL = 
DUMPBIN = 
DYNAMIC_CLIENT_FALSE = 
DYNAMIC_CLIENT_TRUE = #
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENABLE_CLIENT_FALSE = 
ENABLE_CLIENT_RELEASE_FALSE = 
ENABLE_CLIENT_RELEASE_TRUE = #
ENABLE_CLIENT_TRUE = #
ENABLE_FCGI_FALSE = 
ENABLE_FCGI_TRUE = #
ENABLE_LIBRARIES_FALSE = #
ENABLE_LIBRARIES_TRUE = 
ENABLE_MANAGER_FALSE = 
ENABLE_MANAGER_TRUE = #
ENABLE_SERVER_FALSE = 
ENABLE_SERVER_TRUE = #
EXEEXT = 
F77 = i686-nacl-gfortran
FFLAGS = -g -O2 -Wall
FGREP = /bin/grep -F
FULLNAME = Kalman Tarnay,,,
GLUT_CFLAGS = 
GLUT_LIBS = 
GLU_CFLAGS = 
GLU_LIBS = 
GL_CFLAGS = 
GL_LIBS = 
GREP = /bin/grep
HAVE_CUDA_LIB_FALSE = 
HAVE_CUDA_LIB_TRUE = #
HAVE_DOCBOOK2X_MAN_FALSE = 
HAVE_DOCBOOK2X_MAN_TRUE = #
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_HEADERS_FALSE = #
INSTALL_HEADERS_TRUE = 
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LD = /home/kalmi/Dropbox/ik/nacl_sdk/pepper_15/toolchain/linux_x86/x86_64-nacl/bin/ld
LDFLAGS = 
LD_EXPORT_DYNAMIC = 
LIBBOINC_VERSION = 6:13:1
LIBCURL = 
LIBCURL_CPPFLAGS = 
LIBEXT = a
LIBNOTIFY_CFLAGS = 
LIBNOTIFY_LIBS = 
LIBOBJS = 

# ignore any LIBS set by configure
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN = /bin/ln
LN_S = ln -s
LOGNAME = kalmi
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/kalmi/boinc/missing --run makeinfo
MYSQL_CFLAGS = 
MYSQL_CONFIG = 
MYSQL_LIBS = 
NM = /home/kalmi/ik/nacl_sdk/pepper_15/toolchain/linux_x86/bin/i686-nacl-nm -B
NMEDIT = 
OBJC = i686-nacl-gcc
OBJCDEPMODE = depmode=none
OBJCFLAGS = -ObjC
OBJDUMP = objdump
OBJEXT = o
OS_DARWIN_FALSE = 
OS_DARWIN_TRUE = #
OS_LINUX_FALSE = 
OS_LINUX_TRUE = #
OS_OS2_FALSE = 
OS_OS2_TRUE = #
OS_WIN32_MINGW_FALSE = 
OS_WIN32_MINGW_TRUE = #
OTOOL = 
OTOOL64 = 
PACKAGE = boinc
PACKAGE_BUGREPORT = 
PACKAGE_NAME = BOINC
PACKAGE_STRING = BOINC 6.13.1
PACKAGE_TARNAME = boinc
PACKAGE_URL = 
PACKAGE_VERSION = 6.13.1
PATH_SEPARATOR = :
PICFLAGS =  -fPIC -DPIC
PKGCONFIG = /usr/bin/pkg-config
PKG_CONFIG = 
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PTHREAD_CC = i686-nacl-gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
RANLIB = i686-nacl-ranlib
RDATE = 2011.08.04
REV = 23935
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SQLITE3_CPPFLAGS = 
SQLITE3_LIBS = 
SSLDIR = /usr
SSL_CFLAGS =  
SSL_CXXFLAGS =  
SSL_LIBS = -lssl -lcrypto  
STRIP = i686-nacl-strip
TOP_BUILD_DIR = /home/kalmi/boinc
VERSION = 6.13.1
WHOAMI = /usr/bin/whoami
WX_CFLAGS = 
WX_CFLAGS_ONLY = 
WX_CONFIG_PATH = 
WX_CPPFLAGS = 
WX_CXXFLAGS = 
WX_CXXFLAGS_ONLY = 
WX_LIBS = 
WX_LIBS_STATIC = 
WX_VERSION = 
XCBATOM_CFLAGS = 
XCBATOM_LIBS = 
XCB_CFLAGS = 
XCB_LIBS = 
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
_libcurl_config = 
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_DUMPBIN = 
ac_ct_F77 = 
acx_pthread_config = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__fastdepOBJC_FALSE = 
am__fastdepOBJC_TRUE = #
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
boinc_alt_platform = 
boinc_platform = i686-pc-nacl
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = /usr/local
host = i686-pc-nacl
host_alias = i686-nacl
host_cpu = i686
host_os = nacl
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /home/kalmi/boinc/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = i686-pc-nacl
target_alias = 
target_cpu = i686
target_os = nacl
target_vendor = pc
RSA_LIBS = -lcrypto
AM_LIBTOOLFLAGS = 
AM_CPPFLAGS = -I$(top_srcdir)/lib -I$(top_srcdir)/api \
	-I$(top_srcdir)/db -I$(top_srcdir)/client \
	-I$(top_srcdir)/tools -I$(top_srcdir)/sched \
	-I$(top_srcdir)/lib/mac $(PTHREAD_CFLAGS) $(MYSQL_CFLAGS) \
	$(PTHREAD_CFLAGS)
AM_CFLAGS = 
AM_CXXFLAGS = 
AM_LDFLAGS = -static

# dependencies to make sure libs gets compiled before
# programs linking to them:
LIBSCHED = $(top_builddir)/sched/libsched.la
LIBSCHED_FCGI = $(top_builddir)/sched/libsched_fcgi.la
LIBBOINC = $(top_builddir)/lib/libboinc.la
LIBBOINC_CRYPT = $(top_builddir)/lib/libboinc_crypt.la
LIBBOINC_FCGI = $(top_builddir)/lib/libboinc_fcgi.la
LIBAPI = $(top_builddir)/api/libboinc_api.la
SERVERLIBS = $(LIBSCHED) $(LIBBOINC_CRYPT) $(LIBBOINC) $(MYSQL_LIBS) $(PTHREAD_LIBS) $(RSA_LIBS) $(SSL_LIBS)
SERVERLIBS_FCGI = $(LIBSCHED_FCGI) $(LIBBOINC_CRYPT) $(LIBBOINC_FCGI) -lfcgi $(MYSQL_LIBS) $(PTHREAD_LIBS) $(RSA_LIBS) $(SSL_LIBS)
APPLIBS = $(LIBAPI) $(LIBBOINC)
libsched_sources = \
    credit.cpp \
    sched_shmem.cpp \
    sched_util.cpp \
    sched_config.cpp \
    sched_limit.cpp \
    sched_msgs.cpp \
    ../db/boinc_db.cpp \
    ../db/db_base.cpp \
    ../tools/process_result_template.cpp \
    ../tools/backend_lib.cpp

lib_LTLIBRARIES = libsched.la $(am__append_1)
libsched_la_SOURCES = $(libsched_sources)
libsched_la_CFLAGS = $(AM_CPPFLAGS)
libsched_la_CXXFLAGS = $(AM_CPPFLAGS)
libsched_la_LDFLAGS = -L$(libdir) -rpath $(libdir) -version-number $(LIBBOINC_VERSION)
libsched_la_LIBADD = $(SSL_LIBS)
pkginclude_HEADERS = \
	credit.h \
	sched_config.h \
	sched_limit.h \
	sched_msgs.h \
	sched_util.h \
	../tools/backend_lib.h \
	validate_util.h

#libsched_fcgi_la_SOURCES = $(libsched_sources)
#libsched_fcgi_la_CFLAGS = -D_USING_FCGI_ $(AM_CPPFLAGS)
#libsched_fcgi_la_CXXFLAGS = -D_USING_FCGI_ $(AM_CPPFLAGS)
#libsched_fcgi_la_LDFLAGS = -L$(libdir) -rpath $(libdir) -version-number $(LIBBOINC_VERSION)
#libsched_fcgi_la_LIBADD = 
LIBSCHED_STATIC = libsched.${LIBEXT}

# end of "if ENABLE_FCGI"

# Some OSs may not prefix libraries with lib. 
# For example OS2
#LIBSCHED_STATIC = sched.${LIBEXT}
LIBSCHED_FCGI_STATIC = libsched_fcgi.${LIBEXT}
#LIBSCHED_FCGI_STATIC = sched_fcgi.${LIBEXT}
all_local = $(LIBSCHED_STATIC) \
	$(am__append_2)

# end of "if ENABLE_LIBRARIES
#cgidir = $(libexecdir)/cgi-bin
#scheddir = $(libexecdir)/sched

# scripts that 'make install' should put in bindir
#bin_SCRIPTS = start stop status
#noinst_HEADERS = \
#    assimilate_handler.h \
#    handle_request.h \
#    sched_main.h \
#    sched_locality.h \
#    sched_score.h \
#    sched_send.h \
#    sched_shmem.h \
#    sched_version.h \
#    sched_types.h

#EXTRA_DIST = \
#    start

#cgi_sources = \
#	credit.cpp \
#    edf_sim.cpp \
#    handle_request.cpp \
#    hr.cpp \
#    hr_info.cpp \
#    sched_main.cpp \
#    sched_array.cpp \
#    sched_assign.cpp \
#    sched_customize.cpp \
#    sched_hr.cpp \
#    sched_resend.cpp \
#    sched_limit.cpp \
#    sched_locality.cpp \
#    sched_result.cpp \
#    sched_score.cpp \
#    sched_send.cpp \
#    sched_timezone.cpp \
#    sched_version.cpp \
#    sched_types.cpp \
#    time_stats_log.cpp

#cgi_SOURCES = $(cgi_sources)
#cgi_LDADD = $(SERVERLIBS)
#census_SOURCES = \
#    census.cpp \
#    hr.cpp \
#    hr_info.cpp

#census_LDADD = $(SERVERLIBS)
#credit_test_SOURCES = \
#	credit_test.cpp

#credit_test_LDADD = $(SERVERLIBS)
#feeder_SOURCES = \
#    feeder.cpp \
#    hr.cpp \
#    hr_info.cpp \
#    ../lib/synch.cpp

#feeder_LDADD = $(SERVERLIBS)
#wu_check_SOURCES = wu_check.cpp
#wu_check_LDADD = $(SERVERLIBS)
#show_shmem_SOURCES = show_shmem.cpp
#show_shmem_LDADD = $(SERVERLIBS)
#file_deleter_SOURCES = file_deleter.cpp
#file_deleter_LDADD = $(SERVERLIBS)
#VALIDATOR_SOURCES = \
#	credit.cpp \
#	validator.cpp \
#	validate_util.cpp \
#	validate_util2.cpp

#sample_bitwise_validator_SOURCES = $(VALIDATOR_SOURCES) \
#	sample_bitwise_validator.cpp 

#sample_bitwise_validator_LDADD = $(SERVERLIBS)
#sample_trivial_validator_SOURCES = $(VALIDATOR_SOURCES) \
#	sample_trivial_validator.cpp

#sample_trivial_validator_LDADD = $(SERVERLIBS)
#ASSIMILATOR_SOURCES = \
#	assimilator.cpp \
#	validate_util.cpp

#sample_dummy_assimilator_SOURCES = $(ASSIMILATOR_SOURCES) \
#	sample_dummy_assimilator.cpp

#sample_dummy_assimilator_LDADD = $(SERVERLIBS)
#sample_assimilator_SOURCES = $(ASSIMILATOR_SOURCES) \
#	sample_assimilator.cpp

#sample_assimilator_LDADD = $(SERVERLIBS)
#single_job_assimilator_SOURCES = $(ASSIMILATOR_SOURCES) \
#	single_job_assimilator.cpp

#single_job_assimilator_LDADD = $(SERVERLIBS)
#sample_work_generator_SOURCES = sample_work_generator.cpp
#sample_work_generator_LDADD = $(SERVERLIBS)
#db_dump_SOURCES = db_dump.cpp
#db_dump_LDADD = $(SERVERLIBS)
#db_purge_SOURCES = db_purge.cpp
#db_purge_LDADD = $(SERVERLIBS)
#trickle_credit_SOURCES = trickle_credit.cpp trickle_handler.cpp
#trickle_credit_LDADD = $(SERVERLIBS)
#trickle_echo_SOURCES = trickle_echo.cpp trickle_handler.cpp
#trickle_echo_LDADD = $(SERVERLIBS)
#update_stats_SOURCES = update_stats.cpp
#update_stats_LDADD = $(SERVERLIBS)
#file_upload_handler_SOURCES = file_upload_handler.cpp
#file_upload_handler_LDADD = $(SERVERLIBS)
#make_work_SOURCES = make_work.cpp
#make_work_LDADD = $(SERVERLIBS)
#transitioner_SOURCES = transitioner.cpp
#transitioner_LDADD = $(SERVERLIBS)
#message_handler_SOURCES = message_handler.cpp
#message_handler_LDADD = $(SERVERLIBS)
#get_file_SOURCES = get_file.cpp
#get_file_LDADD = $(SERVERLIBS)
#put_file_SOURCES = put_file.cpp
#put_file_LDADD = $(SERVERLIBS)
#delete_file_SOURCES = delete_file.cpp
#delete_file_LDADD = $(SERVERLIBS)
#sched_driver_SOURCES = sched_driver.cpp
#sched_driver_LDADD = $(SERVERLIBS)
##fcgi_SOURCES = $(cgi_sources)
##fcgi_CPPFLAGS = -D_USING_FCGI_ $(AM_CPPFLAGS)
##fcgi_LDADD = $(SERVERLIBS_FCGI)
##fcgi_file_upload_handler_SOURCES = \
##    file_upload_handler.cpp \
##    sched_config.cpp \
##    sched_msgs.cpp 

##fcgi_file_upload_handler_CPPFLAGS = -D_USING_FCGI_ $(AM_CPPFLAGS)
##fcgi_file_upload_handler_LDADD = $(SERVERLIBS_FCGI)
CLEANFILES = status stop
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.incl $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  sched/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  sched/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
boinc_path_config.py: $(top_builddir)/config.status $(top_srcdir)/py/boinc_path_config.py.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libsched.la: $(libsched_la_OBJECTS) $(libsched_la_DEPENDENCIES) 
	$(CXXLINK) $(am_libsched_la_rpath) $(libsched_la_LDFLAGS) $(libsched_la_OBJECTS) $(libsched_la_LIBADD) $(LIBS)
libsched_fcgi.la: $(libsched_fcgi_la_OBJECTS) $(libsched_fcgi_la_DEPENDENCIES) 
	$(CXXLINK) $(am_libsched_fcgi_la_rpath) $(libsched_fcgi_la_LDFLAGS) $(libsched_fcgi_la_OBJECTS) $(libsched_fcgi_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
install-cgiPROGRAMS: $(cgi_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(cgidir)" || $(mkdir_p) "$(DESTDIR)$(cgidir)"
	@list='$(cgi_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(cgiPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(cgidir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(cgiPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(cgidir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-cgiPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(cgi_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(cgidir)/$$f'"; \
	  rm -f "$(DESTDIR)$(cgidir)/$$f"; \
	done

clean-cgiPROGRAMS:
	@list='$(cgi_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
install-schedPROGRAMS: $(sched_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(scheddir)" || $(mkdir_p) "$(DESTDIR)$(scheddir)"
	@list='$(sched_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(schedPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(scheddir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(schedPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(scheddir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-schedPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sched_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(scheddir)/$$f'"; \
	  rm -f "$(DESTDIR)$(scheddir)/$$f"; \
	done

clean-schedPROGRAMS:
	@list='$(sched_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
census$(EXEEXT): $(census_OBJECTS) $(census_DEPENDENCIES) 
	@rm -f census$(EXEEXT)
	$(CXXLINK) $(census_LDFLAGS) $(census_OBJECTS) $(census_LDADD) $(LIBS)
cgi$(EXEEXT): $(cgi_OBJECTS) $(cgi_DEPENDENCIES) 
	@rm -f cgi$(EXEEXT)
	$(CXXLINK) $(cgi_LDFLAGS) $(cgi_OBJECTS) $(cgi_LDADD) $(LIBS)
credit_test$(EXEEXT): $(credit_test_OBJECTS) $(credit_test_DEPENDENCIES) 
	@rm -f credit_test$(EXEEXT)
	$(CXXLINK) $(credit_test_LDFLAGS) $(credit_test_OBJECTS) $(credit_test_LDADD) $(LIBS)
db_dump$(EXEEXT): $(db_dump_OBJECTS) $(db_dump_DEPENDENCIES) 
	@rm -f db_dump$(EXEEXT)
	$(CXXLINK) $(db_dump_LDFLAGS) $(db_dump_OBJECTS) $(db_dump_LDADD) $(LIBS)
db_purge$(EXEEXT): $(db_purge_OBJECTS) $(db_purge_DEPENDENCIES) 
	@rm -f db_purge$(EXEEXT)
	$(CXXLINK) $(db_purge_LDFLAGS) $(db_purge_OBJECTS) $(db_purge_LDADD) $(LIBS)
delete_file$(EXEEXT): $(delete_file_OBJECTS) $(delete_file_DEPENDENCIES) 
	@rm -f delete_file$(EXEEXT)
	$(CXXLINK) $(delete_file_LDFLAGS) $(delete_file_OBJECTS) $(delete_file_LDADD) $(LIBS)
fcgi$(EXEEXT): $(fcgi_OBJECTS) $(fcgi_DEPENDENCIES) 
	@rm -f fcgi$(EXEEXT)
	$(CXXLINK) $(fcgi_LDFLAGS) $(fcgi_OBJECTS) $(fcgi_LDADD) $(LIBS)
fcgi_file_upload_handler$(EXEEXT): $(fcgi_file_upload_handler_OBJECTS) $(fcgi_file_upload_handler_DEPENDENCIES) 
	@rm -f fcgi_file_upload_handler$(EXEEXT)
	$(CXXLINK) $(fcgi_file_upload_handler_LDFLAGS) $(fcgi_file_upload_handler_OBJECTS) $(fcgi_file_upload_handler_LDADD) $(LIBS)
feeder$(EXEEXT): $(feeder_OBJECTS) $(feeder_DEPENDENCIES) 
	@rm -f feeder$(EXEEXT)
	$(CXXLINK) $(feeder_LDFLAGS) $(feeder_OBJECTS) $(feeder_LDADD) $(LIBS)
file_deleter$(EXEEXT): $(file_deleter_OBJECTS) $(file_deleter_DEPENDENCIES) 
	@rm -f file_deleter$(EXEEXT)
	$(CXXLINK) $(file_deleter_LDFLAGS) $(file_deleter_OBJECTS) $(file_deleter_LDADD) $(LIBS)
file_upload_handler$(EXEEXT): $(file_upload_handler_OBJECTS) $(file_upload_handler_DEPENDENCIES) 
	@rm -f file_upload_handler$(EXEEXT)
	$(CXXLINK) $(file_upload_handler_LDFLAGS) $(file_upload_handler_OBJECTS) $(file_upload_handler_LDADD) $(LIBS)
get_file$(EXEEXT): $(get_file_OBJECTS) $(get_file_DEPENDENCIES) 
	@rm -f get_file$(EXEEXT)
	$(CXXLINK) $(get_file_LDFLAGS) $(get_file_OBJECTS) $(get_file_LDADD) $(LIBS)
make_work$(EXEEXT): $(make_work_OBJECTS) $(make_work_DEPENDENCIES) 
	@rm -f make_work$(EXEEXT)
	$(CXXLINK) $(make_work_LDFLAGS) $(make_work_OBJECTS) $(make_work_LDADD) $(LIBS)
message_handler$(EXEEXT): $(message_handler_OBJECTS) $(message_handler_DEPENDENCIES) 
	@rm -f message_handler$(EXEEXT)
	$(CXXLINK) $(message_handler_LDFLAGS) $(message_handler_OBJECTS) $(message_handler_LDADD) $(LIBS)
put_file$(EXEEXT): $(put_file_OBJECTS) $(put_file_DEPENDENCIES) 
	@rm -f put_file$(EXEEXT)
	$(CXXLINK) $(put_file_LDFLAGS) $(put_file_OBJECTS) $(put_file_LDADD) $(LIBS)
sample_assimilator$(EXEEXT): $(sample_assimilator_OBJECTS) $(sample_assimilator_DEPENDENCIES) 
	@rm -f sample_assimilator$(EXEEXT)
	$(CXXLINK) $(sample_assimilator_LDFLAGS) $(sample_assimilator_OBJECTS) $(sample_assimilator_LDADD) $(LIBS)
sample_bitwise_validator$(EXEEXT): $(sample_bitwise_validator_OBJECTS) $(sample_bitwise_validator_DEPENDENCIES) 
	@rm -f sample_bitwise_validator$(EXEEXT)
	$(CXXLINK) $(sample_bitwise_validator_LDFLAGS) $(sample_bitwise_validator_OBJECTS) $(sample_bitwise_validator_LDADD) $(LIBS)
sample_dummy_assimilator$(EXEEXT): $(sample_dummy_assimilator_OBJECTS) $(sample_dummy_assimilator_DEPENDENCIES) 
	@rm -f sample_dummy_assimilator$(EXEEXT)
	$(CXXLINK) $(sample_dummy_assimilator_LDFLAGS) $(sample_dummy_assimilator_OBJECTS) $(sample_dummy_assimilator_LDADD) $(LIBS)
sample_trivial_validator$(EXEEXT): $(sample_trivial_validator_OBJECTS) $(sample_trivial_validator_DEPENDENCIES) 
	@rm -f sample_trivial_validator$(EXEEXT)
	$(CXXLINK) $(sample_trivial_validator_LDFLAGS) $(sample_trivial_validator_OBJECTS) $(sample_trivial_validator_LDADD) $(LIBS)
sample_work_generator$(EXEEXT): $(sample_work_generator_OBJECTS) $(sample_work_generator_DEPENDENCIES) 
	@rm -f sample_work_generator$(EXEEXT)
	$(CXXLINK) $(sample_work_generator_LDFLAGS) $(sample_work_generator_OBJECTS) $(sample_work_generator_LDADD) $(LIBS)
sched_driver$(EXEEXT): $(sched_driver_OBJECTS) $(sched_driver_DEPENDENCIES) 
	@rm -f sched_driver$(EXEEXT)
	$(CXXLINK) $(sched_driver_LDFLAGS) $(sched_driver_OBJECTS) $(sched_driver_LDADD) $(LIBS)
show_shmem$(EXEEXT): $(show_shmem_OBJECTS) $(show_shmem_DEPENDENCIES) 
	@rm -f show_shmem$(EXEEXT)
	$(CXXLINK) $(show_shmem_LDFLAGS) $(show_shmem_OBJECTS) $(show_shmem_LDADD) $(LIBS)
single_job_assimilator$(EXEEXT): $(single_job_assimilator_OBJECTS) $(single_job_assimilator_DEPENDENCIES) 
	@rm -f single_job_assimilator$(EXEEXT)
	$(CXXLINK) $(single_job_assimilator_LDFLAGS) $(single_job_assimilator_OBJECTS) $(single_job_assimilator_LDADD) $(LIBS)
transitioner$(EXEEXT): $(transitioner_OBJECTS) $(transitioner_DEPENDENCIES) 
	@rm -f transitioner$(EXEEXT)
	$(CXXLINK) $(transitioner_LDFLAGS) $(transitioner_OBJECTS) $(transitioner_LDADD) $(LIBS)
trickle_credit$(EXEEXT): $(trickle_credit_OBJECTS) $(trickle_credit_DEPENDENCIES) 
	@rm -f trickle_credit$(EXEEXT)
	$(CXXLINK) $(trickle_credit_LDFLAGS) $(trickle_credit_OBJECTS) $(trickle_credit_LDADD) $(LIBS)
trickle_echo$(EXEEXT): $(trickle_echo_OBJECTS) $(trickle_echo_DEPENDENCIES) 
	@rm -f trickle_echo$(EXEEXT)
	$(CXXLINK) $(trickle_echo_LDFLAGS) $(trickle_echo_OBJECTS) $(trickle_echo_LDADD) $(LIBS)
update_stats$(EXEEXT): $(update_stats_OBJECTS) $(update_stats_DEPENDENCIES) 
	@rm -f update_stats$(EXEEXT)
	$(CXXLINK) $(update_stats_LDFLAGS) $(update_stats_OBJECTS) $(update_stats_LDADD) $(LIBS)
wu_check$(EXEEXT): $(wu_check_OBJECTS) $(wu_check_DEPENDENCIES) 
	@rm -f wu_check$(EXEEXT)
	$(CXXLINK) $(wu_check_LDFLAGS) $(wu_check_OBJECTS) $(wu_check_LDADD) $(LIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f $$d$$p; then \
	    f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	    echo " $(binSCRIPT_INSTALL) '$$d$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	    $(binSCRIPT_INSTALL) "$$d$$p" "$(DESTDIR)$(bindir)/$$f"; \
	  else :; fi; \
	done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/assimilator.Po
include ./$(DEPDIR)/census.Po
include ./$(DEPDIR)/credit.Po
include ./$(DEPDIR)/credit_test.Po
include ./$(DEPDIR)/db_dump.Po
include ./$(DEPDIR)/db_purge.Po
include ./$(DEPDIR)/delete_file.Po
include ./$(DEPDIR)/edf_sim.Po
include ./$(DEPDIR)/fcgi-credit.Po
include ./$(DEPDIR)/fcgi-edf_sim.Po
include ./$(DEPDIR)/fcgi-handle_request.Po
include ./$(DEPDIR)/fcgi-hr.Po
include ./$(DEPDIR)/fcgi-hr_info.Po
include ./$(DEPDIR)/fcgi-sched_array.Po
include ./$(DEPDIR)/fcgi-sched_assign.Po
include ./$(DEPDIR)/fcgi-sched_customize.Po
include ./$(DEPDIR)/fcgi-sched_hr.Po
include ./$(DEPDIR)/fcgi-sched_limit.Po
include ./$(DEPDIR)/fcgi-sched_locality.Po
include ./$(DEPDIR)/fcgi-sched_main.Po
include ./$(DEPDIR)/fcgi-sched_resend.Po
include ./$(DEPDIR)/fcgi-sched_result.Po
include ./$(DEPDIR)/fcgi-sched_score.Po
include ./$(DEPDIR)/fcgi-sched_send.Po
include ./$(DEPDIR)/fcgi-sched_timezone.Po
include ./$(DEPDIR)/fcgi-sched_types.Po
include ./$(DEPDIR)/fcgi-sched_version.Po
include ./$(DEPDIR)/fcgi-time_stats_log.Po
include ./$(DEPDIR)/fcgi_file_upload_handler-file_upload_handler.Po
include ./$(DEPDIR)/fcgi_file_upload_handler-sched_config.Po
include ./$(DEPDIR)/fcgi_file_upload_handler-sched_msgs.Po
include ./$(DEPDIR)/feeder.Po
include ./$(DEPDIR)/file_deleter.Po
include ./$(DEPDIR)/file_upload_handler.Po
include ./$(DEPDIR)/get_file.Po
include ./$(DEPDIR)/handle_request.Po
include ./$(DEPDIR)/hr.Po
include ./$(DEPDIR)/hr_info.Po
include ./$(DEPDIR)/libsched_fcgi_la-backend_lib.Plo
include ./$(DEPDIR)/libsched_fcgi_la-boinc_db.Plo
include ./$(DEPDIR)/libsched_fcgi_la-credit.Plo
include ./$(DEPDIR)/libsched_fcgi_la-db_base.Plo
include ./$(DEPDIR)/libsched_fcgi_la-process_result_template.Plo
include ./$(DEPDIR)/libsched_fcgi_la-sched_config.Plo
include ./$(DEPDIR)/libsched_fcgi_la-sched_limit.Plo
include ./$(DEPDIR)/libsched_fcgi_la-sched_msgs.Plo
include ./$(DEPDIR)/libsched_fcgi_la-sched_shmem.Plo
include ./$(DEPDIR)/libsched_fcgi_la-sched_util.Plo
include ./$(DEPDIR)/libsched_la-backend_lib.Plo
include ./$(DEPDIR)/libsched_la-boinc_db.Plo
include ./$(DEPDIR)/libsched_la-credit.Plo
include ./$(DEPDIR)/libsched_la-db_base.Plo
include ./$(DEPDIR)/libsched_la-process_result_template.Plo
include ./$(DEPDIR)/libsched_la-sched_config.Plo
include ./$(DEPDIR)/libsched_la-sched_limit.Plo
include ./$(DEPDIR)/libsched_la-sched_msgs.Plo
include ./$(DEPDIR)/libsched_la-sched_shmem.Plo
include ./$(DEPDIR)/libsched_la-sched_util.Plo
include ./$(DEPDIR)/make_work.Po
include ./$(DEPDIR)/message_handler.Po
include ./$(DEPDIR)/put_file.Po
include ./$(DEPDIR)/sample_assimilator.Po
include ./$(DEPDIR)/sample_bitwise_validator.Po
include ./$(DEPDIR)/sample_dummy_assimilator.Po
include ./$(DEPDIR)/sample_trivial_validator.Po
include ./$(DEPDIR)/sample_work_generator.Po
include ./$(DEPDIR)/sched_array.Po
include ./$(DEPDIR)/sched_assign.Po
include ./$(DEPDIR)/sched_customize.Po
include ./$(DEPDIR)/sched_driver.Po
include ./$(DEPDIR)/sched_hr.Po
include ./$(DEPDIR)/sched_limit.Po
include ./$(DEPDIR)/sched_locality.Po
include ./$(DEPDIR)/sched_main.Po
include ./$(DEPDIR)/sched_resend.Po
include ./$(DEPDIR)/sched_result.Po
include ./$(DEPDIR)/sched_score.Po
include ./$(DEPDIR)/sched_send.Po
include ./$(DEPDIR)/sched_timezone.Po
include ./$(DEPDIR)/sched_types.Po
include ./$(DEPDIR)/sched_version.Po
include ./$(DEPDIR)/show_shmem.Po
include ./$(DEPDIR)/single_job_assimilator.Po
include ./$(DEPDIR)/synch.Po
include ./$(DEPDIR)/time_stats_log.Po
include ./$(DEPDIR)/transitioner.Po
include ./$(DEPDIR)/trickle_credit.Po
include ./$(DEPDIR)/trickle_echo.Po
include ./$(DEPDIR)/trickle_handler.Po
include ./$(DEPDIR)/update_stats.Po
include ./$(DEPDIR)/validate_util.Po
include ./$(DEPDIR)/validate_util2.Po
include ./$(DEPDIR)/validator.Po
include ./$(DEPDIR)/wu_check.Po

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

libsched_la-credit.lo: credit.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_la_CXXFLAGS) $(CXXFLAGS) -MT libsched_la-credit.lo -MD -MP -MF "$(DEPDIR)/libsched_la-credit.Tpo" -c -o libsched_la-credit.lo `test -f 'credit.cpp' || echo '$(srcdir)/'`credit.cpp; \
	then mv -f "$(DEPDIR)/libsched_la-credit.Tpo" "$(DEPDIR)/libsched_la-credit.Plo"; else rm -f "$(DEPDIR)/libsched_la-credit.Tpo"; exit 1; fi
#	source='credit.cpp' object='libsched_la-credit.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_la_CXXFLAGS) $(CXXFLAGS) -c -o libsched_la-credit.lo `test -f 'credit.cpp' || echo '$(srcdir)/'`credit.cpp

libsched_la-sched_shmem.lo: sched_shmem.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_la_CXXFLAGS) $(CXXFLAGS) -MT libsched_la-sched_shmem.lo -MD -MP -MF "$(DEPDIR)/libsched_la-sched_shmem.Tpo" -c -o libsched_la-sched_shmem.lo `test -f 'sched_shmem.cpp' || echo '$(srcdir)/'`sched_shmem.cpp; \
	then mv -f "$(DEPDIR)/libsched_la-sched_shmem.Tpo" "$(DEPDIR)/libsched_la-sched_shmem.Plo"; else rm -f "$(DEPDIR)/libsched_la-sched_shmem.Tpo"; exit 1; fi
#	source='sched_shmem.cpp' object='libsched_la-sched_shmem.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_la_CXXFLAGS) $(CXXFLAGS) -c -o libsched_la-sched_shmem.lo `test -f 'sched_shmem.cpp' || echo '$(srcdir)/'`sched_shmem.cpp

libsched_la-sched_util.lo: sched_util.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_la_CXXFLAGS) $(CXXFLAGS) -MT libsched_la-sched_util.lo -MD -MP -MF "$(DEPDIR)/libsched_la-sched_util.Tpo" -c -o libsched_la-sched_util.lo `test -f 'sched_util.cpp' || echo '$(srcdir)/'`sched_util.cpp; \
	then mv -f "$(DEPDIR)/libsched_la-sched_util.Tpo" "$(DEPDIR)/libsched_la-sched_util.Plo"; else rm -f "$(DEPDIR)/libsched_la-sched_util.Tpo"; exit 1; fi
#	source='sched_util.cpp' object='libsched_la-sched_util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_la_CXXFLAGS) $(CXXFLAGS) -c -o libsched_la-sched_util.lo `test -f 'sched_util.cpp' || echo '$(srcdir)/'`sched_util.cpp

libsched_la-sched_config.lo: sched_config.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_la_CXXFLAGS) $(CXXFLAGS) -MT libsched_la-sched_config.lo -MD -MP -MF "$(DEPDIR)/libsched_la-sched_config.Tpo" -c -o libsched_la-sched_config.lo `test -f 'sched_config.cpp' || echo '$(srcdir)/'`sched_config.cpp; \
	then mv -f "$(DEPDIR)/libsched_la-sched_config.Tpo" "$(DEPDIR)/libsched_la-sched_config.Plo"; else rm -f "$(DEPDIR)/libsched_la-sched_config.Tpo"; exit 1; fi
#	source='sched_config.cpp' object='libsched_la-sched_config.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_la_CXXFLAGS) $(CXXFLAGS) -c -o libsched_la-sched_config.lo `test -f 'sched_config.cpp' || echo '$(srcdir)/'`sched_config.cpp

libsched_la-sched_limit.lo: sched_limit.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_la_CXXFLAGS) $(CXXFLAGS) -MT libsched_la-sched_limit.lo -MD -MP -MF "$(DEPDIR)/libsched_la-sched_limit.Tpo" -c -o libsched_la-sched_limit.lo `test -f 'sched_limit.cpp' || echo '$(srcdir)/'`sched_limit.cpp; \
	then mv -f "$(DEPDIR)/libsched_la-sched_limit.Tpo" "$(DEPDIR)/libsched_la-sched_limit.Plo"; else rm -f "$(DEPDIR)/libsched_la-sched_limit.Tpo"; exit 1; fi
#	source='sched_limit.cpp' object='libsched_la-sched_limit.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_la_CXXFLAGS) $(CXXFLAGS) -c -o libsched_la-sched_limit.lo `test -f 'sched_limit.cpp' || echo '$(srcdir)/'`sched_limit.cpp

libsched_la-sched_msgs.lo: sched_msgs.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_la_CXXFLAGS) $(CXXFLAGS) -MT libsched_la-sched_msgs.lo -MD -MP -MF "$(DEPDIR)/libsched_la-sched_msgs.Tpo" -c -o libsched_la-sched_msgs.lo `test -f 'sched_msgs.cpp' || echo '$(srcdir)/'`sched_msgs.cpp; \
	then mv -f "$(DEPDIR)/libsched_la-sched_msgs.Tpo" "$(DEPDIR)/libsched_la-sched_msgs.Plo"; else rm -f "$(DEPDIR)/libsched_la-sched_msgs.Tpo"; exit 1; fi
#	source='sched_msgs.cpp' object='libsched_la-sched_msgs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_la_CXXFLAGS) $(CXXFLAGS) -c -o libsched_la-sched_msgs.lo `test -f 'sched_msgs.cpp' || echo '$(srcdir)/'`sched_msgs.cpp

libsched_la-boinc_db.lo: ../db/boinc_db.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_la_CXXFLAGS) $(CXXFLAGS) -MT libsched_la-boinc_db.lo -MD -MP -MF "$(DEPDIR)/libsched_la-boinc_db.Tpo" -c -o libsched_la-boinc_db.lo `test -f '../db/boinc_db.cpp' || echo '$(srcdir)/'`../db/boinc_db.cpp; \
	then mv -f "$(DEPDIR)/libsched_la-boinc_db.Tpo" "$(DEPDIR)/libsched_la-boinc_db.Plo"; else rm -f "$(DEPDIR)/libsched_la-boinc_db.Tpo"; exit 1; fi
#	source='../db/boinc_db.cpp' object='libsched_la-boinc_db.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_la_CXXFLAGS) $(CXXFLAGS) -c -o libsched_la-boinc_db.lo `test -f '../db/boinc_db.cpp' || echo '$(srcdir)/'`../db/boinc_db.cpp

libsched_la-db_base.lo: ../db/db_base.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_la_CXXFLAGS) $(CXXFLAGS) -MT libsched_la-db_base.lo -MD -MP -MF "$(DEPDIR)/libsched_la-db_base.Tpo" -c -o libsched_la-db_base.lo `test -f '../db/db_base.cpp' || echo '$(srcdir)/'`../db/db_base.cpp; \
	then mv -f "$(DEPDIR)/libsched_la-db_base.Tpo" "$(DEPDIR)/libsched_la-db_base.Plo"; else rm -f "$(DEPDIR)/libsched_la-db_base.Tpo"; exit 1; fi
#	source='../db/db_base.cpp' object='libsched_la-db_base.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_la_CXXFLAGS) $(CXXFLAGS) -c -o libsched_la-db_base.lo `test -f '../db/db_base.cpp' || echo '$(srcdir)/'`../db/db_base.cpp

libsched_la-process_result_template.lo: ../tools/process_result_template.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_la_CXXFLAGS) $(CXXFLAGS) -MT libsched_la-process_result_template.lo -MD -MP -MF "$(DEPDIR)/libsched_la-process_result_template.Tpo" -c -o libsched_la-process_result_template.lo `test -f '../tools/process_result_template.cpp' || echo '$(srcdir)/'`../tools/process_result_template.cpp; \
	then mv -f "$(DEPDIR)/libsched_la-process_result_template.Tpo" "$(DEPDIR)/libsched_la-process_result_template.Plo"; else rm -f "$(DEPDIR)/libsched_la-process_result_template.Tpo"; exit 1; fi
#	source='../tools/process_result_template.cpp' object='libsched_la-process_result_template.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_la_CXXFLAGS) $(CXXFLAGS) -c -o libsched_la-process_result_template.lo `test -f '../tools/process_result_template.cpp' || echo '$(srcdir)/'`../tools/process_result_template.cpp

libsched_la-backend_lib.lo: ../tools/backend_lib.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_la_CXXFLAGS) $(CXXFLAGS) -MT libsched_la-backend_lib.lo -MD -MP -MF "$(DEPDIR)/libsched_la-backend_lib.Tpo" -c -o libsched_la-backend_lib.lo `test -f '../tools/backend_lib.cpp' || echo '$(srcdir)/'`../tools/backend_lib.cpp; \
	then mv -f "$(DEPDIR)/libsched_la-backend_lib.Tpo" "$(DEPDIR)/libsched_la-backend_lib.Plo"; else rm -f "$(DEPDIR)/libsched_la-backend_lib.Tpo"; exit 1; fi
#	source='../tools/backend_lib.cpp' object='libsched_la-backend_lib.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_la_CXXFLAGS) $(CXXFLAGS) -c -o libsched_la-backend_lib.lo `test -f '../tools/backend_lib.cpp' || echo '$(srcdir)/'`../tools/backend_lib.cpp

libsched_fcgi_la-credit.lo: credit.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_fcgi_la_CXXFLAGS) $(CXXFLAGS) -MT libsched_fcgi_la-credit.lo -MD -MP -MF "$(DEPDIR)/libsched_fcgi_la-credit.Tpo" -c -o libsched_fcgi_la-credit.lo `test -f 'credit.cpp' || echo '$(srcdir)/'`credit.cpp; \
	then mv -f "$(DEPDIR)/libsched_fcgi_la-credit.Tpo" "$(DEPDIR)/libsched_fcgi_la-credit.Plo"; else rm -f "$(DEPDIR)/libsched_fcgi_la-credit.Tpo"; exit 1; fi
#	source='credit.cpp' object='libsched_fcgi_la-credit.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_fcgi_la_CXXFLAGS) $(CXXFLAGS) -c -o libsched_fcgi_la-credit.lo `test -f 'credit.cpp' || echo '$(srcdir)/'`credit.cpp

libsched_fcgi_la-sched_shmem.lo: sched_shmem.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_fcgi_la_CXXFLAGS) $(CXXFLAGS) -MT libsched_fcgi_la-sched_shmem.lo -MD -MP -MF "$(DEPDIR)/libsched_fcgi_la-sched_shmem.Tpo" -c -o libsched_fcgi_la-sched_shmem.lo `test -f 'sched_shmem.cpp' || echo '$(srcdir)/'`sched_shmem.cpp; \
	then mv -f "$(DEPDIR)/libsched_fcgi_la-sched_shmem.Tpo" "$(DEPDIR)/libsched_fcgi_la-sched_shmem.Plo"; else rm -f "$(DEPDIR)/libsched_fcgi_la-sched_shmem.Tpo"; exit 1; fi
#	source='sched_shmem.cpp' object='libsched_fcgi_la-sched_shmem.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_fcgi_la_CXXFLAGS) $(CXXFLAGS) -c -o libsched_fcgi_la-sched_shmem.lo `test -f 'sched_shmem.cpp' || echo '$(srcdir)/'`sched_shmem.cpp

libsched_fcgi_la-sched_util.lo: sched_util.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_fcgi_la_CXXFLAGS) $(CXXFLAGS) -MT libsched_fcgi_la-sched_util.lo -MD -MP -MF "$(DEPDIR)/libsched_fcgi_la-sched_util.Tpo" -c -o libsched_fcgi_la-sched_util.lo `test -f 'sched_util.cpp' || echo '$(srcdir)/'`sched_util.cpp; \
	then mv -f "$(DEPDIR)/libsched_fcgi_la-sched_util.Tpo" "$(DEPDIR)/libsched_fcgi_la-sched_util.Plo"; else rm -f "$(DEPDIR)/libsched_fcgi_la-sched_util.Tpo"; exit 1; fi
#	source='sched_util.cpp' object='libsched_fcgi_la-sched_util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_fcgi_la_CXXFLAGS) $(CXXFLAGS) -c -o libsched_fcgi_la-sched_util.lo `test -f 'sched_util.cpp' || echo '$(srcdir)/'`sched_util.cpp

libsched_fcgi_la-sched_config.lo: sched_config.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_fcgi_la_CXXFLAGS) $(CXXFLAGS) -MT libsched_fcgi_la-sched_config.lo -MD -MP -MF "$(DEPDIR)/libsched_fcgi_la-sched_config.Tpo" -c -o libsched_fcgi_la-sched_config.lo `test -f 'sched_config.cpp' || echo '$(srcdir)/'`sched_config.cpp; \
	then mv -f "$(DEPDIR)/libsched_fcgi_la-sched_config.Tpo" "$(DEPDIR)/libsched_fcgi_la-sched_config.Plo"; else rm -f "$(DEPDIR)/libsched_fcgi_la-sched_config.Tpo"; exit 1; fi
#	source='sched_config.cpp' object='libsched_fcgi_la-sched_config.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_fcgi_la_CXXFLAGS) $(CXXFLAGS) -c -o libsched_fcgi_la-sched_config.lo `test -f 'sched_config.cpp' || echo '$(srcdir)/'`sched_config.cpp

libsched_fcgi_la-sched_limit.lo: sched_limit.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_fcgi_la_CXXFLAGS) $(CXXFLAGS) -MT libsched_fcgi_la-sched_limit.lo -MD -MP -MF "$(DEPDIR)/libsched_fcgi_la-sched_limit.Tpo" -c -o libsched_fcgi_la-sched_limit.lo `test -f 'sched_limit.cpp' || echo '$(srcdir)/'`sched_limit.cpp; \
	then mv -f "$(DEPDIR)/libsched_fcgi_la-sched_limit.Tpo" "$(DEPDIR)/libsched_fcgi_la-sched_limit.Plo"; else rm -f "$(DEPDIR)/libsched_fcgi_la-sched_limit.Tpo"; exit 1; fi
#	source='sched_limit.cpp' object='libsched_fcgi_la-sched_limit.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_fcgi_la_CXXFLAGS) $(CXXFLAGS) -c -o libsched_fcgi_la-sched_limit.lo `test -f 'sched_limit.cpp' || echo '$(srcdir)/'`sched_limit.cpp

libsched_fcgi_la-sched_msgs.lo: sched_msgs.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_fcgi_la_CXXFLAGS) $(CXXFLAGS) -MT libsched_fcgi_la-sched_msgs.lo -MD -MP -MF "$(DEPDIR)/libsched_fcgi_la-sched_msgs.Tpo" -c -o libsched_fcgi_la-sched_msgs.lo `test -f 'sched_msgs.cpp' || echo '$(srcdir)/'`sched_msgs.cpp; \
	then mv -f "$(DEPDIR)/libsched_fcgi_la-sched_msgs.Tpo" "$(DEPDIR)/libsched_fcgi_la-sched_msgs.Plo"; else rm -f "$(DEPDIR)/libsched_fcgi_la-sched_msgs.Tpo"; exit 1; fi
#	source='sched_msgs.cpp' object='libsched_fcgi_la-sched_msgs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_fcgi_la_CXXFLAGS) $(CXXFLAGS) -c -o libsched_fcgi_la-sched_msgs.lo `test -f 'sched_msgs.cpp' || echo '$(srcdir)/'`sched_msgs.cpp

libsched_fcgi_la-boinc_db.lo: ../db/boinc_db.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_fcgi_la_CXXFLAGS) $(CXXFLAGS) -MT libsched_fcgi_la-boinc_db.lo -MD -MP -MF "$(DEPDIR)/libsched_fcgi_la-boinc_db.Tpo" -c -o libsched_fcgi_la-boinc_db.lo `test -f '../db/boinc_db.cpp' || echo '$(srcdir)/'`../db/boinc_db.cpp; \
	then mv -f "$(DEPDIR)/libsched_fcgi_la-boinc_db.Tpo" "$(DEPDIR)/libsched_fcgi_la-boinc_db.Plo"; else rm -f "$(DEPDIR)/libsched_fcgi_la-boinc_db.Tpo"; exit 1; fi
#	source='../db/boinc_db.cpp' object='libsched_fcgi_la-boinc_db.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_fcgi_la_CXXFLAGS) $(CXXFLAGS) -c -o libsched_fcgi_la-boinc_db.lo `test -f '../db/boinc_db.cpp' || echo '$(srcdir)/'`../db/boinc_db.cpp

libsched_fcgi_la-db_base.lo: ../db/db_base.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_fcgi_la_CXXFLAGS) $(CXXFLAGS) -MT libsched_fcgi_la-db_base.lo -MD -MP -MF "$(DEPDIR)/libsched_fcgi_la-db_base.Tpo" -c -o libsched_fcgi_la-db_base.lo `test -f '../db/db_base.cpp' || echo '$(srcdir)/'`../db/db_base.cpp; \
	then mv -f "$(DEPDIR)/libsched_fcgi_la-db_base.Tpo" "$(DEPDIR)/libsched_fcgi_la-db_base.Plo"; else rm -f "$(DEPDIR)/libsched_fcgi_la-db_base.Tpo"; exit 1; fi
#	source='../db/db_base.cpp' object='libsched_fcgi_la-db_base.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_fcgi_la_CXXFLAGS) $(CXXFLAGS) -c -o libsched_fcgi_la-db_base.lo `test -f '../db/db_base.cpp' || echo '$(srcdir)/'`../db/db_base.cpp

libsched_fcgi_la-process_result_template.lo: ../tools/process_result_template.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_fcgi_la_CXXFLAGS) $(CXXFLAGS) -MT libsched_fcgi_la-process_result_template.lo -MD -MP -MF "$(DEPDIR)/libsched_fcgi_la-process_result_template.Tpo" -c -o libsched_fcgi_la-process_result_template.lo `test -f '../tools/process_result_template.cpp' || echo '$(srcdir)/'`../tools/process_result_template.cpp; \
	then mv -f "$(DEPDIR)/libsched_fcgi_la-process_result_template.Tpo" "$(DEPDIR)/libsched_fcgi_la-process_result_template.Plo"; else rm -f "$(DEPDIR)/libsched_fcgi_la-process_result_template.Tpo"; exit 1; fi
#	source='../tools/process_result_template.cpp' object='libsched_fcgi_la-process_result_template.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_fcgi_la_CXXFLAGS) $(CXXFLAGS) -c -o libsched_fcgi_la-process_result_template.lo `test -f '../tools/process_result_template.cpp' || echo '$(srcdir)/'`../tools/process_result_template.cpp

libsched_fcgi_la-backend_lib.lo: ../tools/backend_lib.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_fcgi_la_CXXFLAGS) $(CXXFLAGS) -MT libsched_fcgi_la-backend_lib.lo -MD -MP -MF "$(DEPDIR)/libsched_fcgi_la-backend_lib.Tpo" -c -o libsched_fcgi_la-backend_lib.lo `test -f '../tools/backend_lib.cpp' || echo '$(srcdir)/'`../tools/backend_lib.cpp; \
	then mv -f "$(DEPDIR)/libsched_fcgi_la-backend_lib.Tpo" "$(DEPDIR)/libsched_fcgi_la-backend_lib.Plo"; else rm -f "$(DEPDIR)/libsched_fcgi_la-backend_lib.Tpo"; exit 1; fi
#	source='../tools/backend_lib.cpp' object='libsched_fcgi_la-backend_lib.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsched_fcgi_la_CXXFLAGS) $(CXXFLAGS) -c -o libsched_fcgi_la-backend_lib.lo `test -f '../tools/backend_lib.cpp' || echo '$(srcdir)/'`../tools/backend_lib.cpp

fcgi-credit.o: credit.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-credit.o -MD -MP -MF "$(DEPDIR)/fcgi-credit.Tpo" -c -o fcgi-credit.o `test -f 'credit.cpp' || echo '$(srcdir)/'`credit.cpp; \
	then mv -f "$(DEPDIR)/fcgi-credit.Tpo" "$(DEPDIR)/fcgi-credit.Po"; else rm -f "$(DEPDIR)/fcgi-credit.Tpo"; exit 1; fi
#	source='credit.cpp' object='fcgi-credit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-credit.o `test -f 'credit.cpp' || echo '$(srcdir)/'`credit.cpp

fcgi-credit.obj: credit.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-credit.obj -MD -MP -MF "$(DEPDIR)/fcgi-credit.Tpo" -c -o fcgi-credit.obj `if test -f 'credit.cpp'; then $(CYGPATH_W) 'credit.cpp'; else $(CYGPATH_W) '$(srcdir)/credit.cpp'; fi`; \
	then mv -f "$(DEPDIR)/fcgi-credit.Tpo" "$(DEPDIR)/fcgi-credit.Po"; else rm -f "$(DEPDIR)/fcgi-credit.Tpo"; exit 1; fi
#	source='credit.cpp' object='fcgi-credit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-credit.obj `if test -f 'credit.cpp'; then $(CYGPATH_W) 'credit.cpp'; else $(CYGPATH_W) '$(srcdir)/credit.cpp'; fi`

fcgi-edf_sim.o: edf_sim.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-edf_sim.o -MD -MP -MF "$(DEPDIR)/fcgi-edf_sim.Tpo" -c -o fcgi-edf_sim.o `test -f 'edf_sim.cpp' || echo '$(srcdir)/'`edf_sim.cpp; \
	then mv -f "$(DEPDIR)/fcgi-edf_sim.Tpo" "$(DEPDIR)/fcgi-edf_sim.Po"; else rm -f "$(DEPDIR)/fcgi-edf_sim.Tpo"; exit 1; fi
#	source='edf_sim.cpp' object='fcgi-edf_sim.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-edf_sim.o `test -f 'edf_sim.cpp' || echo '$(srcdir)/'`edf_sim.cpp

fcgi-edf_sim.obj: edf_sim.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-edf_sim.obj -MD -MP -MF "$(DEPDIR)/fcgi-edf_sim.Tpo" -c -o fcgi-edf_sim.obj `if test -f 'edf_sim.cpp'; then $(CYGPATH_W) 'edf_sim.cpp'; else $(CYGPATH_W) '$(srcdir)/edf_sim.cpp'; fi`; \
	then mv -f "$(DEPDIR)/fcgi-edf_sim.Tpo" "$(DEPDIR)/fcgi-edf_sim.Po"; else rm -f "$(DEPDIR)/fcgi-edf_sim.Tpo"; exit 1; fi
#	source='edf_sim.cpp' object='fcgi-edf_sim.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-edf_sim.obj `if test -f 'edf_sim.cpp'; then $(CYGPATH_W) 'edf_sim.cpp'; else $(CYGPATH_W) '$(srcdir)/edf_sim.cpp'; fi`

fcgi-handle_request.o: handle_request.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-handle_request.o -MD -MP -MF "$(DEPDIR)/fcgi-handle_request.Tpo" -c -o fcgi-handle_request.o `test -f 'handle_request.cpp' || echo '$(srcdir)/'`handle_request.cpp; \
	then mv -f "$(DEPDIR)/fcgi-handle_request.Tpo" "$(DEPDIR)/fcgi-handle_request.Po"; else rm -f "$(DEPDIR)/fcgi-handle_request.Tpo"; exit 1; fi
#	source='handle_request.cpp' object='fcgi-handle_request.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-handle_request.o `test -f 'handle_request.cpp' || echo '$(srcdir)/'`handle_request.cpp

fcgi-handle_request.obj: handle_request.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-handle_request.obj -MD -MP -MF "$(DEPDIR)/fcgi-handle_request.Tpo" -c -o fcgi-handle_request.obj `if test -f 'handle_request.cpp'; then $(CYGPATH_W) 'handle_request.cpp'; else $(CYGPATH_W) '$(srcdir)/handle_request.cpp'; fi`; \
	then mv -f "$(DEPDIR)/fcgi-handle_request.Tpo" "$(DEPDIR)/fcgi-handle_request.Po"; else rm -f "$(DEPDIR)/fcgi-handle_request.Tpo"; exit 1; fi
#	source='handle_request.cpp' object='fcgi-handle_request.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-handle_request.obj `if test -f 'handle_request.cpp'; then $(CYGPATH_W) 'handle_request.cpp'; else $(CYGPATH_W) '$(srcdir)/handle_request.cpp'; fi`

fcgi-hr.o: hr.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-hr.o -MD -MP -MF "$(DEPDIR)/fcgi-hr.Tpo" -c -o fcgi-hr.o `test -f 'hr.cpp' || echo '$(srcdir)/'`hr.cpp; \
	then mv -f "$(DEPDIR)/fcgi-hr.Tpo" "$(DEPDIR)/fcgi-hr.Po"; else rm -f "$(DEPDIR)/fcgi-hr.Tpo"; exit 1; fi
#	source='hr.cpp' object='fcgi-hr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-hr.o `test -f 'hr.cpp' || echo '$(srcdir)/'`hr.cpp

fcgi-hr.obj: hr.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-hr.obj -MD -MP -MF "$(DEPDIR)/fcgi-hr.Tpo" -c -o fcgi-hr.obj `if test -f 'hr.cpp'; then $(CYGPATH_W) 'hr.cpp'; else $(CYGPATH_W) '$(srcdir)/hr.cpp'; fi`; \
	then mv -f "$(DEPDIR)/fcgi-hr.Tpo" "$(DEPDIR)/fcgi-hr.Po"; else rm -f "$(DEPDIR)/fcgi-hr.Tpo"; exit 1; fi
#	source='hr.cpp' object='fcgi-hr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-hr.obj `if test -f 'hr.cpp'; then $(CYGPATH_W) 'hr.cpp'; else $(CYGPATH_W) '$(srcdir)/hr.cpp'; fi`

fcgi-hr_info.o: hr_info.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-hr_info.o -MD -MP -MF "$(DEPDIR)/fcgi-hr_info.Tpo" -c -o fcgi-hr_info.o `test -f 'hr_info.cpp' || echo '$(srcdir)/'`hr_info.cpp; \
	then mv -f "$(DEPDIR)/fcgi-hr_info.Tpo" "$(DEPDIR)/fcgi-hr_info.Po"; else rm -f "$(DEPDIR)/fcgi-hr_info.Tpo"; exit 1; fi
#	source='hr_info.cpp' object='fcgi-hr_info.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-hr_info.o `test -f 'hr_info.cpp' || echo '$(srcdir)/'`hr_info.cpp

fcgi-hr_info.obj: hr_info.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-hr_info.obj -MD -MP -MF "$(DEPDIR)/fcgi-hr_info.Tpo" -c -o fcgi-hr_info.obj `if test -f 'hr_info.cpp'; then $(CYGPATH_W) 'hr_info.cpp'; else $(CYGPATH_W) '$(srcdir)/hr_info.cpp'; fi`; \
	then mv -f "$(DEPDIR)/fcgi-hr_info.Tpo" "$(DEPDIR)/fcgi-hr_info.Po"; else rm -f "$(DEPDIR)/fcgi-hr_info.Tpo"; exit 1; fi
#	source='hr_info.cpp' object='fcgi-hr_info.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-hr_info.obj `if test -f 'hr_info.cpp'; then $(CYGPATH_W) 'hr_info.cpp'; else $(CYGPATH_W) '$(srcdir)/hr_info.cpp'; fi`

fcgi-sched_main.o: sched_main.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-sched_main.o -MD -MP -MF "$(DEPDIR)/fcgi-sched_main.Tpo" -c -o fcgi-sched_main.o `test -f 'sched_main.cpp' || echo '$(srcdir)/'`sched_main.cpp; \
	then mv -f "$(DEPDIR)/fcgi-sched_main.Tpo" "$(DEPDIR)/fcgi-sched_main.Po"; else rm -f "$(DEPDIR)/fcgi-sched_main.Tpo"; exit 1; fi
#	source='sched_main.cpp' object='fcgi-sched_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-sched_main.o `test -f 'sched_main.cpp' || echo '$(srcdir)/'`sched_main.cpp

fcgi-sched_main.obj: sched_main.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-sched_main.obj -MD -MP -MF "$(DEPDIR)/fcgi-sched_main.Tpo" -c -o fcgi-sched_main.obj `if test -f 'sched_main.cpp'; then $(CYGPATH_W) 'sched_main.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_main.cpp'; fi`; \
	then mv -f "$(DEPDIR)/fcgi-sched_main.Tpo" "$(DEPDIR)/fcgi-sched_main.Po"; else rm -f "$(DEPDIR)/fcgi-sched_main.Tpo"; exit 1; fi
#	source='sched_main.cpp' object='fcgi-sched_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-sched_main.obj `if test -f 'sched_main.cpp'; then $(CYGPATH_W) 'sched_main.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_main.cpp'; fi`

fcgi-sched_array.o: sched_array.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-sched_array.o -MD -MP -MF "$(DEPDIR)/fcgi-sched_array.Tpo" -c -o fcgi-sched_array.o `test -f 'sched_array.cpp' || echo '$(srcdir)/'`sched_array.cpp; \
	then mv -f "$(DEPDIR)/fcgi-sched_array.Tpo" "$(DEPDIR)/fcgi-sched_array.Po"; else rm -f "$(DEPDIR)/fcgi-sched_array.Tpo"; exit 1; fi
#	source='sched_array.cpp' object='fcgi-sched_array.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-sched_array.o `test -f 'sched_array.cpp' || echo '$(srcdir)/'`sched_array.cpp

fcgi-sched_array.obj: sched_array.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-sched_array.obj -MD -MP -MF "$(DEPDIR)/fcgi-sched_array.Tpo" -c -o fcgi-sched_array.obj `if test -f 'sched_array.cpp'; then $(CYGPATH_W) 'sched_array.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_array.cpp'; fi`; \
	then mv -f "$(DEPDIR)/fcgi-sched_array.Tpo" "$(DEPDIR)/fcgi-sched_array.Po"; else rm -f "$(DEPDIR)/fcgi-sched_array.Tpo"; exit 1; fi
#	source='sched_array.cpp' object='fcgi-sched_array.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-sched_array.obj `if test -f 'sched_array.cpp'; then $(CYGPATH_W) 'sched_array.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_array.cpp'; fi`

fcgi-sched_assign.o: sched_assign.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-sched_assign.o -MD -MP -MF "$(DEPDIR)/fcgi-sched_assign.Tpo" -c -o fcgi-sched_assign.o `test -f 'sched_assign.cpp' || echo '$(srcdir)/'`sched_assign.cpp; \
	then mv -f "$(DEPDIR)/fcgi-sched_assign.Tpo" "$(DEPDIR)/fcgi-sched_assign.Po"; else rm -f "$(DEPDIR)/fcgi-sched_assign.Tpo"; exit 1; fi
#	source='sched_assign.cpp' object='fcgi-sched_assign.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-sched_assign.o `test -f 'sched_assign.cpp' || echo '$(srcdir)/'`sched_assign.cpp

fcgi-sched_assign.obj: sched_assign.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-sched_assign.obj -MD -MP -MF "$(DEPDIR)/fcgi-sched_assign.Tpo" -c -o fcgi-sched_assign.obj `if test -f 'sched_assign.cpp'; then $(CYGPATH_W) 'sched_assign.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_assign.cpp'; fi`; \
	then mv -f "$(DEPDIR)/fcgi-sched_assign.Tpo" "$(DEPDIR)/fcgi-sched_assign.Po"; else rm -f "$(DEPDIR)/fcgi-sched_assign.Tpo"; exit 1; fi
#	source='sched_assign.cpp' object='fcgi-sched_assign.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-sched_assign.obj `if test -f 'sched_assign.cpp'; then $(CYGPATH_W) 'sched_assign.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_assign.cpp'; fi`

fcgi-sched_customize.o: sched_customize.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-sched_customize.o -MD -MP -MF "$(DEPDIR)/fcgi-sched_customize.Tpo" -c -o fcgi-sched_customize.o `test -f 'sched_customize.cpp' || echo '$(srcdir)/'`sched_customize.cpp; \
	then mv -f "$(DEPDIR)/fcgi-sched_customize.Tpo" "$(DEPDIR)/fcgi-sched_customize.Po"; else rm -f "$(DEPDIR)/fcgi-sched_customize.Tpo"; exit 1; fi
#	source='sched_customize.cpp' object='fcgi-sched_customize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-sched_customize.o `test -f 'sched_customize.cpp' || echo '$(srcdir)/'`sched_customize.cpp

fcgi-sched_customize.obj: sched_customize.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-sched_customize.obj -MD -MP -MF "$(DEPDIR)/fcgi-sched_customize.Tpo" -c -o fcgi-sched_customize.obj `if test -f 'sched_customize.cpp'; then $(CYGPATH_W) 'sched_customize.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_customize.cpp'; fi`; \
	then mv -f "$(DEPDIR)/fcgi-sched_customize.Tpo" "$(DEPDIR)/fcgi-sched_customize.Po"; else rm -f "$(DEPDIR)/fcgi-sched_customize.Tpo"; exit 1; fi
#	source='sched_customize.cpp' object='fcgi-sched_customize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-sched_customize.obj `if test -f 'sched_customize.cpp'; then $(CYGPATH_W) 'sched_customize.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_customize.cpp'; fi`

fcgi-sched_hr.o: sched_hr.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-sched_hr.o -MD -MP -MF "$(DEPDIR)/fcgi-sched_hr.Tpo" -c -o fcgi-sched_hr.o `test -f 'sched_hr.cpp' || echo '$(srcdir)/'`sched_hr.cpp; \
	then mv -f "$(DEPDIR)/fcgi-sched_hr.Tpo" "$(DEPDIR)/fcgi-sched_hr.Po"; else rm -f "$(DEPDIR)/fcgi-sched_hr.Tpo"; exit 1; fi
#	source='sched_hr.cpp' object='fcgi-sched_hr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-sched_hr.o `test -f 'sched_hr.cpp' || echo '$(srcdir)/'`sched_hr.cpp

fcgi-sched_hr.obj: sched_hr.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-sched_hr.obj -MD -MP -MF "$(DEPDIR)/fcgi-sched_hr.Tpo" -c -o fcgi-sched_hr.obj `if test -f 'sched_hr.cpp'; then $(CYGPATH_W) 'sched_hr.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_hr.cpp'; fi`; \
	then mv -f "$(DEPDIR)/fcgi-sched_hr.Tpo" "$(DEPDIR)/fcgi-sched_hr.Po"; else rm -f "$(DEPDIR)/fcgi-sched_hr.Tpo"; exit 1; fi
#	source='sched_hr.cpp' object='fcgi-sched_hr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-sched_hr.obj `if test -f 'sched_hr.cpp'; then $(CYGPATH_W) 'sched_hr.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_hr.cpp'; fi`

fcgi-sched_resend.o: sched_resend.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-sched_resend.o -MD -MP -MF "$(DEPDIR)/fcgi-sched_resend.Tpo" -c -o fcgi-sched_resend.o `test -f 'sched_resend.cpp' || echo '$(srcdir)/'`sched_resend.cpp; \
	then mv -f "$(DEPDIR)/fcgi-sched_resend.Tpo" "$(DEPDIR)/fcgi-sched_resend.Po"; else rm -f "$(DEPDIR)/fcgi-sched_resend.Tpo"; exit 1; fi
#	source='sched_resend.cpp' object='fcgi-sched_resend.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-sched_resend.o `test -f 'sched_resend.cpp' || echo '$(srcdir)/'`sched_resend.cpp

fcgi-sched_resend.obj: sched_resend.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-sched_resend.obj -MD -MP -MF "$(DEPDIR)/fcgi-sched_resend.Tpo" -c -o fcgi-sched_resend.obj `if test -f 'sched_resend.cpp'; then $(CYGPATH_W) 'sched_resend.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_resend.cpp'; fi`; \
	then mv -f "$(DEPDIR)/fcgi-sched_resend.Tpo" "$(DEPDIR)/fcgi-sched_resend.Po"; else rm -f "$(DEPDIR)/fcgi-sched_resend.Tpo"; exit 1; fi
#	source='sched_resend.cpp' object='fcgi-sched_resend.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-sched_resend.obj `if test -f 'sched_resend.cpp'; then $(CYGPATH_W) 'sched_resend.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_resend.cpp'; fi`

fcgi-sched_limit.o: sched_limit.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-sched_limit.o -MD -MP -MF "$(DEPDIR)/fcgi-sched_limit.Tpo" -c -o fcgi-sched_limit.o `test -f 'sched_limit.cpp' || echo '$(srcdir)/'`sched_limit.cpp; \
	then mv -f "$(DEPDIR)/fcgi-sched_limit.Tpo" "$(DEPDIR)/fcgi-sched_limit.Po"; else rm -f "$(DEPDIR)/fcgi-sched_limit.Tpo"; exit 1; fi
#	source='sched_limit.cpp' object='fcgi-sched_limit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-sched_limit.o `test -f 'sched_limit.cpp' || echo '$(srcdir)/'`sched_limit.cpp

fcgi-sched_limit.obj: sched_limit.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-sched_limit.obj -MD -MP -MF "$(DEPDIR)/fcgi-sched_limit.Tpo" -c -o fcgi-sched_limit.obj `if test -f 'sched_limit.cpp'; then $(CYGPATH_W) 'sched_limit.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_limit.cpp'; fi`; \
	then mv -f "$(DEPDIR)/fcgi-sched_limit.Tpo" "$(DEPDIR)/fcgi-sched_limit.Po"; else rm -f "$(DEPDIR)/fcgi-sched_limit.Tpo"; exit 1; fi
#	source='sched_limit.cpp' object='fcgi-sched_limit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-sched_limit.obj `if test -f 'sched_limit.cpp'; then $(CYGPATH_W) 'sched_limit.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_limit.cpp'; fi`

fcgi-sched_locality.o: sched_locality.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-sched_locality.o -MD -MP -MF "$(DEPDIR)/fcgi-sched_locality.Tpo" -c -o fcgi-sched_locality.o `test -f 'sched_locality.cpp' || echo '$(srcdir)/'`sched_locality.cpp; \
	then mv -f "$(DEPDIR)/fcgi-sched_locality.Tpo" "$(DEPDIR)/fcgi-sched_locality.Po"; else rm -f "$(DEPDIR)/fcgi-sched_locality.Tpo"; exit 1; fi
#	source='sched_locality.cpp' object='fcgi-sched_locality.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-sched_locality.o `test -f 'sched_locality.cpp' || echo '$(srcdir)/'`sched_locality.cpp

fcgi-sched_locality.obj: sched_locality.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-sched_locality.obj -MD -MP -MF "$(DEPDIR)/fcgi-sched_locality.Tpo" -c -o fcgi-sched_locality.obj `if test -f 'sched_locality.cpp'; then $(CYGPATH_W) 'sched_locality.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_locality.cpp'; fi`; \
	then mv -f "$(DEPDIR)/fcgi-sched_locality.Tpo" "$(DEPDIR)/fcgi-sched_locality.Po"; else rm -f "$(DEPDIR)/fcgi-sched_locality.Tpo"; exit 1; fi
#	source='sched_locality.cpp' object='fcgi-sched_locality.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-sched_locality.obj `if test -f 'sched_locality.cpp'; then $(CYGPATH_W) 'sched_locality.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_locality.cpp'; fi`

fcgi-sched_result.o: sched_result.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-sched_result.o -MD -MP -MF "$(DEPDIR)/fcgi-sched_result.Tpo" -c -o fcgi-sched_result.o `test -f 'sched_result.cpp' || echo '$(srcdir)/'`sched_result.cpp; \
	then mv -f "$(DEPDIR)/fcgi-sched_result.Tpo" "$(DEPDIR)/fcgi-sched_result.Po"; else rm -f "$(DEPDIR)/fcgi-sched_result.Tpo"; exit 1; fi
#	source='sched_result.cpp' object='fcgi-sched_result.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-sched_result.o `test -f 'sched_result.cpp' || echo '$(srcdir)/'`sched_result.cpp

fcgi-sched_result.obj: sched_result.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-sched_result.obj -MD -MP -MF "$(DEPDIR)/fcgi-sched_result.Tpo" -c -o fcgi-sched_result.obj `if test -f 'sched_result.cpp'; then $(CYGPATH_W) 'sched_result.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_result.cpp'; fi`; \
	then mv -f "$(DEPDIR)/fcgi-sched_result.Tpo" "$(DEPDIR)/fcgi-sched_result.Po"; else rm -f "$(DEPDIR)/fcgi-sched_result.Tpo"; exit 1; fi
#	source='sched_result.cpp' object='fcgi-sched_result.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-sched_result.obj `if test -f 'sched_result.cpp'; then $(CYGPATH_W) 'sched_result.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_result.cpp'; fi`

fcgi-sched_score.o: sched_score.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-sched_score.o -MD -MP -MF "$(DEPDIR)/fcgi-sched_score.Tpo" -c -o fcgi-sched_score.o `test -f 'sched_score.cpp' || echo '$(srcdir)/'`sched_score.cpp; \
	then mv -f "$(DEPDIR)/fcgi-sched_score.Tpo" "$(DEPDIR)/fcgi-sched_score.Po"; else rm -f "$(DEPDIR)/fcgi-sched_score.Tpo"; exit 1; fi
#	source='sched_score.cpp' object='fcgi-sched_score.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-sched_score.o `test -f 'sched_score.cpp' || echo '$(srcdir)/'`sched_score.cpp

fcgi-sched_score.obj: sched_score.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-sched_score.obj -MD -MP -MF "$(DEPDIR)/fcgi-sched_score.Tpo" -c -o fcgi-sched_score.obj `if test -f 'sched_score.cpp'; then $(CYGPATH_W) 'sched_score.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_score.cpp'; fi`; \
	then mv -f "$(DEPDIR)/fcgi-sched_score.Tpo" "$(DEPDIR)/fcgi-sched_score.Po"; else rm -f "$(DEPDIR)/fcgi-sched_score.Tpo"; exit 1; fi
#	source='sched_score.cpp' object='fcgi-sched_score.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-sched_score.obj `if test -f 'sched_score.cpp'; then $(CYGPATH_W) 'sched_score.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_score.cpp'; fi`

fcgi-sched_send.o: sched_send.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-sched_send.o -MD -MP -MF "$(DEPDIR)/fcgi-sched_send.Tpo" -c -o fcgi-sched_send.o `test -f 'sched_send.cpp' || echo '$(srcdir)/'`sched_send.cpp; \
	then mv -f "$(DEPDIR)/fcgi-sched_send.Tpo" "$(DEPDIR)/fcgi-sched_send.Po"; else rm -f "$(DEPDIR)/fcgi-sched_send.Tpo"; exit 1; fi
#	source='sched_send.cpp' object='fcgi-sched_send.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-sched_send.o `test -f 'sched_send.cpp' || echo '$(srcdir)/'`sched_send.cpp

fcgi-sched_send.obj: sched_send.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-sched_send.obj -MD -MP -MF "$(DEPDIR)/fcgi-sched_send.Tpo" -c -o fcgi-sched_send.obj `if test -f 'sched_send.cpp'; then $(CYGPATH_W) 'sched_send.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_send.cpp'; fi`; \
	then mv -f "$(DEPDIR)/fcgi-sched_send.Tpo" "$(DEPDIR)/fcgi-sched_send.Po"; else rm -f "$(DEPDIR)/fcgi-sched_send.Tpo"; exit 1; fi
#	source='sched_send.cpp' object='fcgi-sched_send.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-sched_send.obj `if test -f 'sched_send.cpp'; then $(CYGPATH_W) 'sched_send.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_send.cpp'; fi`

fcgi-sched_timezone.o: sched_timezone.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-sched_timezone.o -MD -MP -MF "$(DEPDIR)/fcgi-sched_timezone.Tpo" -c -o fcgi-sched_timezone.o `test -f 'sched_timezone.cpp' || echo '$(srcdir)/'`sched_timezone.cpp; \
	then mv -f "$(DEPDIR)/fcgi-sched_timezone.Tpo" "$(DEPDIR)/fcgi-sched_timezone.Po"; else rm -f "$(DEPDIR)/fcgi-sched_timezone.Tpo"; exit 1; fi
#	source='sched_timezone.cpp' object='fcgi-sched_timezone.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-sched_timezone.o `test -f 'sched_timezone.cpp' || echo '$(srcdir)/'`sched_timezone.cpp

fcgi-sched_timezone.obj: sched_timezone.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-sched_timezone.obj -MD -MP -MF "$(DEPDIR)/fcgi-sched_timezone.Tpo" -c -o fcgi-sched_timezone.obj `if test -f 'sched_timezone.cpp'; then $(CYGPATH_W) 'sched_timezone.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_timezone.cpp'; fi`; \
	then mv -f "$(DEPDIR)/fcgi-sched_timezone.Tpo" "$(DEPDIR)/fcgi-sched_timezone.Po"; else rm -f "$(DEPDIR)/fcgi-sched_timezone.Tpo"; exit 1; fi
#	source='sched_timezone.cpp' object='fcgi-sched_timezone.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-sched_timezone.obj `if test -f 'sched_timezone.cpp'; then $(CYGPATH_W) 'sched_timezone.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_timezone.cpp'; fi`

fcgi-sched_version.o: sched_version.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-sched_version.o -MD -MP -MF "$(DEPDIR)/fcgi-sched_version.Tpo" -c -o fcgi-sched_version.o `test -f 'sched_version.cpp' || echo '$(srcdir)/'`sched_version.cpp; \
	then mv -f "$(DEPDIR)/fcgi-sched_version.Tpo" "$(DEPDIR)/fcgi-sched_version.Po"; else rm -f "$(DEPDIR)/fcgi-sched_version.Tpo"; exit 1; fi
#	source='sched_version.cpp' object='fcgi-sched_version.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-sched_version.o `test -f 'sched_version.cpp' || echo '$(srcdir)/'`sched_version.cpp

fcgi-sched_version.obj: sched_version.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-sched_version.obj -MD -MP -MF "$(DEPDIR)/fcgi-sched_version.Tpo" -c -o fcgi-sched_version.obj `if test -f 'sched_version.cpp'; then $(CYGPATH_W) 'sched_version.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_version.cpp'; fi`; \
	then mv -f "$(DEPDIR)/fcgi-sched_version.Tpo" "$(DEPDIR)/fcgi-sched_version.Po"; else rm -f "$(DEPDIR)/fcgi-sched_version.Tpo"; exit 1; fi
#	source='sched_version.cpp' object='fcgi-sched_version.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-sched_version.obj `if test -f 'sched_version.cpp'; then $(CYGPATH_W) 'sched_version.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_version.cpp'; fi`

fcgi-sched_types.o: sched_types.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-sched_types.o -MD -MP -MF "$(DEPDIR)/fcgi-sched_types.Tpo" -c -o fcgi-sched_types.o `test -f 'sched_types.cpp' || echo '$(srcdir)/'`sched_types.cpp; \
	then mv -f "$(DEPDIR)/fcgi-sched_types.Tpo" "$(DEPDIR)/fcgi-sched_types.Po"; else rm -f "$(DEPDIR)/fcgi-sched_types.Tpo"; exit 1; fi
#	source='sched_types.cpp' object='fcgi-sched_types.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-sched_types.o `test -f 'sched_types.cpp' || echo '$(srcdir)/'`sched_types.cpp

fcgi-sched_types.obj: sched_types.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-sched_types.obj -MD -MP -MF "$(DEPDIR)/fcgi-sched_types.Tpo" -c -o fcgi-sched_types.obj `if test -f 'sched_types.cpp'; then $(CYGPATH_W) 'sched_types.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_types.cpp'; fi`; \
	then mv -f "$(DEPDIR)/fcgi-sched_types.Tpo" "$(DEPDIR)/fcgi-sched_types.Po"; else rm -f "$(DEPDIR)/fcgi-sched_types.Tpo"; exit 1; fi
#	source='sched_types.cpp' object='fcgi-sched_types.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-sched_types.obj `if test -f 'sched_types.cpp'; then $(CYGPATH_W) 'sched_types.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_types.cpp'; fi`

fcgi-time_stats_log.o: time_stats_log.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-time_stats_log.o -MD -MP -MF "$(DEPDIR)/fcgi-time_stats_log.Tpo" -c -o fcgi-time_stats_log.o `test -f 'time_stats_log.cpp' || echo '$(srcdir)/'`time_stats_log.cpp; \
	then mv -f "$(DEPDIR)/fcgi-time_stats_log.Tpo" "$(DEPDIR)/fcgi-time_stats_log.Po"; else rm -f "$(DEPDIR)/fcgi-time_stats_log.Tpo"; exit 1; fi
#	source='time_stats_log.cpp' object='fcgi-time_stats_log.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-time_stats_log.o `test -f 'time_stats_log.cpp' || echo '$(srcdir)/'`time_stats_log.cpp

fcgi-time_stats_log.obj: time_stats_log.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi-time_stats_log.obj -MD -MP -MF "$(DEPDIR)/fcgi-time_stats_log.Tpo" -c -o fcgi-time_stats_log.obj `if test -f 'time_stats_log.cpp'; then $(CYGPATH_W) 'time_stats_log.cpp'; else $(CYGPATH_W) '$(srcdir)/time_stats_log.cpp'; fi`; \
	then mv -f "$(DEPDIR)/fcgi-time_stats_log.Tpo" "$(DEPDIR)/fcgi-time_stats_log.Po"; else rm -f "$(DEPDIR)/fcgi-time_stats_log.Tpo"; exit 1; fi
#	source='time_stats_log.cpp' object='fcgi-time_stats_log.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi-time_stats_log.obj `if test -f 'time_stats_log.cpp'; then $(CYGPATH_W) 'time_stats_log.cpp'; else $(CYGPATH_W) '$(srcdir)/time_stats_log.cpp'; fi`

fcgi_file_upload_handler-file_upload_handler.o: file_upload_handler.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_file_upload_handler_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi_file_upload_handler-file_upload_handler.o -MD -MP -MF "$(DEPDIR)/fcgi_file_upload_handler-file_upload_handler.Tpo" -c -o fcgi_file_upload_handler-file_upload_handler.o `test -f 'file_upload_handler.cpp' || echo '$(srcdir)/'`file_upload_handler.cpp; \
	then mv -f "$(DEPDIR)/fcgi_file_upload_handler-file_upload_handler.Tpo" "$(DEPDIR)/fcgi_file_upload_handler-file_upload_handler.Po"; else rm -f "$(DEPDIR)/fcgi_file_upload_handler-file_upload_handler.Tpo"; exit 1; fi
#	source='file_upload_handler.cpp' object='fcgi_file_upload_handler-file_upload_handler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_file_upload_handler_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi_file_upload_handler-file_upload_handler.o `test -f 'file_upload_handler.cpp' || echo '$(srcdir)/'`file_upload_handler.cpp

fcgi_file_upload_handler-file_upload_handler.obj: file_upload_handler.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_file_upload_handler_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi_file_upload_handler-file_upload_handler.obj -MD -MP -MF "$(DEPDIR)/fcgi_file_upload_handler-file_upload_handler.Tpo" -c -o fcgi_file_upload_handler-file_upload_handler.obj `if test -f 'file_upload_handler.cpp'; then $(CYGPATH_W) 'file_upload_handler.cpp'; else $(CYGPATH_W) '$(srcdir)/file_upload_handler.cpp'; fi`; \
	then mv -f "$(DEPDIR)/fcgi_file_upload_handler-file_upload_handler.Tpo" "$(DEPDIR)/fcgi_file_upload_handler-file_upload_handler.Po"; else rm -f "$(DEPDIR)/fcgi_file_upload_handler-file_upload_handler.Tpo"; exit 1; fi
#	source='file_upload_handler.cpp' object='fcgi_file_upload_handler-file_upload_handler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_file_upload_handler_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi_file_upload_handler-file_upload_handler.obj `if test -f 'file_upload_handler.cpp'; then $(CYGPATH_W) 'file_upload_handler.cpp'; else $(CYGPATH_W) '$(srcdir)/file_upload_handler.cpp'; fi`

fcgi_file_upload_handler-sched_config.o: sched_config.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_file_upload_handler_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi_file_upload_handler-sched_config.o -MD -MP -MF "$(DEPDIR)/fcgi_file_upload_handler-sched_config.Tpo" -c -o fcgi_file_upload_handler-sched_config.o `test -f 'sched_config.cpp' || echo '$(srcdir)/'`sched_config.cpp; \
	then mv -f "$(DEPDIR)/fcgi_file_upload_handler-sched_config.Tpo" "$(DEPDIR)/fcgi_file_upload_handler-sched_config.Po"; else rm -f "$(DEPDIR)/fcgi_file_upload_handler-sched_config.Tpo"; exit 1; fi
#	source='sched_config.cpp' object='fcgi_file_upload_handler-sched_config.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_file_upload_handler_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi_file_upload_handler-sched_config.o `test -f 'sched_config.cpp' || echo '$(srcdir)/'`sched_config.cpp

fcgi_file_upload_handler-sched_config.obj: sched_config.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_file_upload_handler_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi_file_upload_handler-sched_config.obj -MD -MP -MF "$(DEPDIR)/fcgi_file_upload_handler-sched_config.Tpo" -c -o fcgi_file_upload_handler-sched_config.obj `if test -f 'sched_config.cpp'; then $(CYGPATH_W) 'sched_config.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_config.cpp'; fi`; \
	then mv -f "$(DEPDIR)/fcgi_file_upload_handler-sched_config.Tpo" "$(DEPDIR)/fcgi_file_upload_handler-sched_config.Po"; else rm -f "$(DEPDIR)/fcgi_file_upload_handler-sched_config.Tpo"; exit 1; fi
#	source='sched_config.cpp' object='fcgi_file_upload_handler-sched_config.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_file_upload_handler_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi_file_upload_handler-sched_config.obj `if test -f 'sched_config.cpp'; then $(CYGPATH_W) 'sched_config.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_config.cpp'; fi`

fcgi_file_upload_handler-sched_msgs.o: sched_msgs.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_file_upload_handler_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi_file_upload_handler-sched_msgs.o -MD -MP -MF "$(DEPDIR)/fcgi_file_upload_handler-sched_msgs.Tpo" -c -o fcgi_file_upload_handler-sched_msgs.o `test -f 'sched_msgs.cpp' || echo '$(srcdir)/'`sched_msgs.cpp; \
	then mv -f "$(DEPDIR)/fcgi_file_upload_handler-sched_msgs.Tpo" "$(DEPDIR)/fcgi_file_upload_handler-sched_msgs.Po"; else rm -f "$(DEPDIR)/fcgi_file_upload_handler-sched_msgs.Tpo"; exit 1; fi
#	source='sched_msgs.cpp' object='fcgi_file_upload_handler-sched_msgs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_file_upload_handler_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi_file_upload_handler-sched_msgs.o `test -f 'sched_msgs.cpp' || echo '$(srcdir)/'`sched_msgs.cpp

fcgi_file_upload_handler-sched_msgs.obj: sched_msgs.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_file_upload_handler_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fcgi_file_upload_handler-sched_msgs.obj -MD -MP -MF "$(DEPDIR)/fcgi_file_upload_handler-sched_msgs.Tpo" -c -o fcgi_file_upload_handler-sched_msgs.obj `if test -f 'sched_msgs.cpp'; then $(CYGPATH_W) 'sched_msgs.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_msgs.cpp'; fi`; \
	then mv -f "$(DEPDIR)/fcgi_file_upload_handler-sched_msgs.Tpo" "$(DEPDIR)/fcgi_file_upload_handler-sched_msgs.Po"; else rm -f "$(DEPDIR)/fcgi_file_upload_handler-sched_msgs.Tpo"; exit 1; fi
#	source='sched_msgs.cpp' object='fcgi_file_upload_handler-sched_msgs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fcgi_file_upload_handler_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fcgi_file_upload_handler-sched_msgs.obj `if test -f 'sched_msgs.cpp'; then $(CYGPATH_W) 'sched_msgs.cpp'; else $(CYGPATH_W) '$(srcdir)/sched_msgs.cpp'; fi`

synch.o: ../lib/synch.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT synch.o -MD -MP -MF "$(DEPDIR)/synch.Tpo" -c -o synch.o `test -f '../lib/synch.cpp' || echo '$(srcdir)/'`../lib/synch.cpp; \
	then mv -f "$(DEPDIR)/synch.Tpo" "$(DEPDIR)/synch.Po"; else rm -f "$(DEPDIR)/synch.Tpo"; exit 1; fi
#	source='../lib/synch.cpp' object='synch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o synch.o `test -f '../lib/synch.cpp' || echo '$(srcdir)/'`../lib/synch.cpp

synch.obj: ../lib/synch.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT synch.obj -MD -MP -MF "$(DEPDIR)/synch.Tpo" -c -o synch.obj `if test -f '../lib/synch.cpp'; then $(CYGPATH_W) '../lib/synch.cpp'; else $(CYGPATH_W) '$(srcdir)/../lib/synch.cpp'; fi`; \
	then mv -f "$(DEPDIR)/synch.Tpo" "$(DEPDIR)/synch.Po"; else rm -f "$(DEPDIR)/synch.Tpo"; exit 1; fi
#	source='../lib/synch.cpp' object='synch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o synch.obj `if test -f '../lib/synch.cpp'; then $(CYGPATH_W) '../lib/synch.cpp'; else $(CYGPATH_W) '$(srcdir)/../lib/synch.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(pkgincludedir)" || $(mkdir_p) "$(DESTDIR)$(pkgincludedir)"
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(pkgincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(pkgincludedir)/$$f'"; \
	  $(pkgincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(pkgincludedir)/$$f"; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(pkgincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(pkgincludedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/.. $(distdir)/../py $(distdir)/../tools
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
#all-local:
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(SCRIPTS) $(HEADERS) \
		all-local
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(cgidir)" "$(DESTDIR)$(scheddir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-cgiPROGRAMS clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-schedPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-cgiPROGRAMS install-pkgincludeHEADERS \
	install-schedPROGRAMS

install-exec-am: install-binPROGRAMS install-binSCRIPTS \
	install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-cgiPROGRAMS uninstall-info-am \
	uninstall-libLTLIBRARIES uninstall-pkgincludeHEADERS \
	uninstall-schedPROGRAMS

.PHONY: CTAGS GTAGS all all-am all-local check check-am clean \
	clean-binPROGRAMS clean-cgiPROGRAMS clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-schedPROGRAMS ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-binSCRIPTS install-cgiPROGRAMS install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-libLTLIBRARIES install-man \
	install-pkgincludeHEADERS install-schedPROGRAMS install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-binSCRIPTS uninstall-cgiPROGRAMS uninstall-info-am \
	uninstall-libLTLIBRARIES uninstall-pkgincludeHEADERS \
	uninstall-schedPROGRAMS

$(LIBSCHED):
	cd $(top_builddir)/sched; ${MAKE} libsched.la
$(LIBSCHED_FCGI):
	cd $(top_builddir)/sched; ${MAKE} libsched_fcgi.la
$(LIBBOINC):
	cd $(top_builddir)/lib; ${MAKE} libboinc.la
$(LIBBOINC_CRYPT):
	cd $(top_builddir)/lib; ${MAKE} libboinc.la
$(LIBBOINC_FCGI):
	cd $(top_builddir)/lib; ${MAKE} libboinc_fcgi.la
$(LIBAPI):
	cd $(top_builddir)/api; ${MAKE} libboinc_api.la

all-local: $(all_local)

$(LIBSCHED_STATIC): libsched.la
	rm -f $(LIBSCHED_STATIC)
	$(LN) .libs/$(LIBSCHED_STATIC) .

$(LIBSCHED_FCGI_STATIC): libsched_fcgi.la
	rm -f $(LIBSCHED_FCGI_STATIC)
	$(LN) .libs/$(LIBSCHED_FCGI_STATIC) .

# end of "if ENABLE_FCGI"
# end of "if ENABLE_SERVER"

.PHONY: PHONY-start

PHONY-start:
	@test -f start || ln -s $(srcdir)/start start && test -f start

status stop: PHONY-start
	@test -f $@ || ln -s start $@ && test -f $@
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
